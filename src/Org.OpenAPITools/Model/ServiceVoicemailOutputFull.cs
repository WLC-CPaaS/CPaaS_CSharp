/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVoicemailOutputFull
    /// </summary>
    [DataContract(Name = "service.VoicemailOutputFull")]
    public partial class ServiceVoicemailOutputFull : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVoicemailOutputFull" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="mailbox">mailbox.</param>
        /// <param name="media">media.</param>
        /// <param name="mediaExtension">mediaExtension.</param>
        /// <param name="messages">messages.</param>
        /// <param name="name">name.</param>
        /// <param name="ownerId">ownerId.</param>
        /// <param name="pin">pin.</param>
        /// <param name="requirePin">requirePin.</param>
        /// <param name="timezone">timezone.</param>
        public ServiceVoicemailOutputFull(string id = default, string mailbox = default, ServiceVoicemailMedia media = default, string mediaExtension = default, int messages = default, string name = default, string ownerId = default, string pin = default, bool requirePin = default, string timezone = default)
        {
            this.Id = id;
            this.Mailbox = mailbox;
            this.Media = media;
            this.MediaExtension = mediaExtension;
            this.Messages = messages;
            this.Name = name;
            this.OwnerId = ownerId;
            this.Pin = pin;
            this.RequirePin = requirePin;
            this.Timezone = timezone;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Mailbox
        /// </summary>
        [DataMember(Name = "mailbox", EmitDefaultValue = false)]
        public string Mailbox { get; set; }

        /// <summary>
        /// Gets or Sets Media
        /// </summary>
        [DataMember(Name = "media", EmitDefaultValue = false)]
        public ServiceVoicemailMedia Media { get; set; }

        /// <summary>
        /// Gets or Sets MediaExtension
        /// </summary>
        [DataMember(Name = "media_extension", EmitDefaultValue = false)]
        public string MediaExtension { get; set; }

        /// <summary>
        /// Gets or Sets Messages
        /// </summary>
        [DataMember(Name = "messages", EmitDefaultValue = false)]
        public int Messages { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OwnerId
        /// </summary>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// Gets or Sets Pin
        /// </summary>
        [DataMember(Name = "pin", EmitDefaultValue = false)]
        public string Pin { get; set; }

        /// <summary>
        /// Gets or Sets RequirePin
        /// </summary>
        [DataMember(Name = "require_pin", EmitDefaultValue = true)]
        public bool RequirePin { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name = "timezone", EmitDefaultValue = false)]
        public string Timezone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVoicemailOutputFull {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Mailbox: ").Append(Mailbox).Append("\n");
            sb.Append("  Media: ").Append(Media).Append("\n");
            sb.Append("  MediaExtension: ").Append(MediaExtension).Append("\n");
            sb.Append("  Messages: ").Append(Messages).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  Pin: ").Append(Pin).Append("\n");
            sb.Append("  RequirePin: ").Append(RequirePin).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

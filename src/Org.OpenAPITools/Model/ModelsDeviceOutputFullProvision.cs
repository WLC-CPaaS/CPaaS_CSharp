/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModelsDeviceOutputFullProvision
    /// </summary>
    [DataContract(Name = "models.DeviceOutputFullProvision")]
    public partial class ModelsDeviceOutputFullProvision : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelsDeviceOutputFullProvision" /> class.
        /// </summary>
        /// <param name="endpointBrand">endpointBrand.</param>
        /// <param name="endpointFamily">endpointFamily.</param>
        /// <param name="endpointModel">endpointModel.</param>
        /// <param name="id">id.</param>
        /// <param name="lineKeys">lineKeys.</param>
        public ModelsDeviceOutputFullProvision(string endpointBrand = default, string endpointFamily = default, string endpointModel = default, string id = default, List<ModelsVOIPDeviceOutputLineKey> lineKeys = default)
        {
            this.EndpointBrand = endpointBrand;
            this.EndpointFamily = endpointFamily;
            this.EndpointModel = endpointModel;
            this.Id = id;
            this.LineKeys = lineKeys;
        }

        /// <summary>
        /// Gets or Sets EndpointBrand
        /// </summary>
        [DataMember(Name = "endpoint_brand", EmitDefaultValue = false)]
        public string EndpointBrand { get; set; }

        /// <summary>
        /// Gets or Sets EndpointFamily
        /// </summary>
        [DataMember(Name = "endpoint_family", EmitDefaultValue = false)]
        public string EndpointFamily { get; set; }

        /// <summary>
        /// Gets or Sets EndpointModel
        /// </summary>
        [DataMember(Name = "endpoint_model", EmitDefaultValue = false)]
        public string EndpointModel { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LineKeys
        /// </summary>
        [DataMember(Name = "line_keys", EmitDefaultValue = false)]
        public List<ModelsVOIPDeviceOutputLineKey> LineKeys { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModelsDeviceOutputFullProvision {\n");
            sb.Append("  EndpointBrand: ").Append(EndpointBrand).Append("\n");
            sb.Append("  EndpointFamily: ").Append(EndpointFamily).Append("\n");
            sb.Append("  EndpointModel: ").Append(EndpointModel).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LineKeys: ").Append(LineKeys).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

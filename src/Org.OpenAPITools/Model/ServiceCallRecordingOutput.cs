/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceCallRecordingOutput
    /// </summary>
    [DataContract(Name = "service.CallRecordingOutput")]
    public partial class ServiceCallRecordingOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCallRecordingOutput" /> class.
        /// </summary>
        /// <param name="callId">callId.</param>
        /// <param name="calleeIdName">calleeIdName.</param>
        /// <param name="calleeIdNumber">calleeIdNumber.</param>
        /// <param name="callerIdName">callerIdName.</param>
        /// <param name="callerIdNumber">callerIdNumber.</param>
        /// <param name="cdrId">cdrId.</param>
        /// <param name="contentType">contentType.</param>
        /// <param name="customChannelVars">customChannelVars.</param>
        /// <param name="description">description.</param>
        /// <param name="direction">direction.</param>
        /// <param name="duration">duration.</param>
        /// <param name="durationMs">durationMs.</param>
        /// <param name="endpointId">endpointId.</param>
        /// <param name="from">from.</param>
        /// <param name="id">id.</param>
        /// <param name="interactionId">interactionId.</param>
        /// <param name="mediaSource">mediaSource.</param>
        /// <param name="mediaType">mediaType.</param>
        /// <param name="name">name.</param>
        /// <param name="origin">origin.</param>
        /// <param name="ownerId">ownerId.</param>
        /// <param name="request">request.</param>
        /// <param name="sourceType">sourceType.</param>
        /// <param name="start">start.</param>
        /// <param name="to">to.</param>
        /// <param name="url">url.</param>
        public ServiceCallRecordingOutput(string callId = default, string calleeIdName = default, string calleeIdNumber = default, string callerIdName = default, string callerIdNumber = default, string cdrId = default, string contentType = default, Dictionary<string, Object> customChannelVars = default, string description = default, string direction = default, int duration = default, int durationMs = default, string endpointId = default, string from = default, string id = default, string interactionId = default, string mediaSource = default, string mediaType = default, string name = default, string origin = default, string ownerId = default, string request = default, string sourceType = default, int start = default, string to = default, string url = default)
        {
            this.CallId = callId;
            this.CalleeIdName = calleeIdName;
            this.CalleeIdNumber = calleeIdNumber;
            this.CallerIdName = callerIdName;
            this.CallerIdNumber = callerIdNumber;
            this.CdrId = cdrId;
            this.ContentType = contentType;
            this.CustomChannelVars = customChannelVars;
            this.Description = description;
            this.Direction = direction;
            this.Duration = duration;
            this.DurationMs = durationMs;
            this.EndpointId = endpointId;
            this.From = from;
            this.Id = id;
            this.InteractionId = interactionId;
            this.MediaSource = mediaSource;
            this.MediaType = mediaType;
            this.Name = name;
            this.Origin = origin;
            this.OwnerId = ownerId;
            this.Request = request;
            this.SourceType = sourceType;
            this.Start = start;
            this.To = to;
            this.Url = url;
        }

        /// <summary>
        /// Gets or Sets CallId
        /// </summary>
        [DataMember(Name = "call_id", EmitDefaultValue = false)]
        public string CallId { get; set; }

        /// <summary>
        /// Gets or Sets CalleeIdName
        /// </summary>
        [DataMember(Name = "callee_id_name", EmitDefaultValue = false)]
        public string CalleeIdName { get; set; }

        /// <summary>
        /// Gets or Sets CalleeIdNumber
        /// </summary>
        [DataMember(Name = "callee_id_number", EmitDefaultValue = false)]
        public string CalleeIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdName
        /// </summary>
        [DataMember(Name = "caller_id_name", EmitDefaultValue = false)]
        public string CallerIdName { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdNumber
        /// </summary>
        [DataMember(Name = "caller_id_number", EmitDefaultValue = false)]
        public string CallerIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets CdrId
        /// </summary>
        [DataMember(Name = "cdr_id", EmitDefaultValue = false)]
        public string CdrId { get; set; }

        /// <summary>
        /// Gets or Sets ContentType
        /// </summary>
        [DataMember(Name = "content_type", EmitDefaultValue = false)]
        public string ContentType { get; set; }

        /// <summary>
        /// Gets or Sets CustomChannelVars
        /// </summary>
        [DataMember(Name = "custom_channel_vars", EmitDefaultValue = false)]
        public Dictionary<string, Object> CustomChannelVars { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Direction
        /// </summary>
        [DataMember(Name = "direction", EmitDefaultValue = false)]
        public string Direction { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public int Duration { get; set; }

        /// <summary>
        /// Gets or Sets DurationMs
        /// </summary>
        [DataMember(Name = "duration_ms", EmitDefaultValue = false)]
        public int DurationMs { get; set; }

        /// <summary>
        /// Gets or Sets EndpointId
        /// </summary>
        [DataMember(Name = "endpoint_id", EmitDefaultValue = false)]
        public string EndpointId { get; set; }

        /// <summary>
        /// Gets or Sets From
        /// </summary>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        public string From { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets InteractionId
        /// </summary>
        [DataMember(Name = "interaction_id", EmitDefaultValue = false)]
        public string InteractionId { get; set; }

        /// <summary>
        /// Gets or Sets MediaSource
        /// </summary>
        [DataMember(Name = "media_source", EmitDefaultValue = false)]
        public string MediaSource { get; set; }

        /// <summary>
        /// Gets or Sets MediaType
        /// </summary>
        [DataMember(Name = "media_type", EmitDefaultValue = false)]
        public string MediaType { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Origin
        /// </summary>
        [DataMember(Name = "origin", EmitDefaultValue = false)]
        public string Origin { get; set; }

        /// <summary>
        /// Gets or Sets OwnerId
        /// </summary>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// Gets or Sets Request
        /// </summary>
        [DataMember(Name = "request", EmitDefaultValue = false)]
        public string Request { get; set; }

        /// <summary>
        /// Gets or Sets SourceType
        /// </summary>
        [DataMember(Name = "source_type", EmitDefaultValue = false)]
        public string SourceType { get; set; }

        /// <summary>
        /// Gets or Sets Start
        /// </summary>
        [DataMember(Name = "start", EmitDefaultValue = false)]
        public int Start { get; set; }

        /// <summary>
        /// Gets or Sets To
        /// </summary>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceCallRecordingOutput {\n");
            sb.Append("  CallId: ").Append(CallId).Append("\n");
            sb.Append("  CalleeIdName: ").Append(CalleeIdName).Append("\n");
            sb.Append("  CalleeIdNumber: ").Append(CalleeIdNumber).Append("\n");
            sb.Append("  CallerIdName: ").Append(CallerIdName).Append("\n");
            sb.Append("  CallerIdNumber: ").Append(CallerIdNumber).Append("\n");
            sb.Append("  CdrId: ").Append(CdrId).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  CustomChannelVars: ").Append(CustomChannelVars).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Direction: ").Append(Direction).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("  DurationMs: ").Append(DurationMs).Append("\n");
            sb.Append("  EndpointId: ").Append(EndpointId).Append("\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  InteractionId: ").Append(InteractionId).Append("\n");
            sb.Append("  MediaSource: ").Append(MediaSource).Append("\n");
            sb.Append("  MediaType: ").Append(MediaType).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Origin: ").Append(Origin).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  Request: ").Append(Request).Append("\n");
            sb.Append("  SourceType: ").Append(SourceType).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVOIPAccountAddData
    /// </summary>
    [DataContract(Name = "service.VOIPAccountAddData")]
    public partial class ServiceVOIPAccountAddData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPAccountAddData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceVOIPAccountAddData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPAccountAddData" /> class.
        /// </summary>
        /// <param name="callerId">callerId.</param>
        /// <param name="doNotDisturb">doNotDisturb.</param>
        /// <param name="musicOnHold">musicOnHold.</param>
        /// <param name="name">name (required).</param>
        /// <param name="realm">realm.</param>
        /// <param name="timezone">timezone (required).</param>
        public ServiceVOIPAccountAddData(ModelsVOIPAccountOutputFullCallerid callerId = default, ModelsVOIPSharedDoNotDisturb doNotDisturb = default, ModelsVOIPAccountMusicOnHold musicOnHold = default, string name = default, string realm = default, string timezone = default)
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for ServiceVOIPAccountAddData and cannot be null");
            }
            this.Name = name;
            // to ensure "timezone" is required (not null)
            if (timezone == null)
            {
                throw new ArgumentNullException("timezone is a required property for ServiceVOIPAccountAddData and cannot be null");
            }
            this.Timezone = timezone;
            this.CallerId = callerId;
            this.DoNotDisturb = doNotDisturb;
            this.MusicOnHold = musicOnHold;
            this.Realm = realm;
        }

        /// <summary>
        /// Gets or Sets CallerId
        /// </summary>
        [DataMember(Name = "caller_id", EmitDefaultValue = false)]
        public ModelsVOIPAccountOutputFullCallerid CallerId { get; set; }

        /// <summary>
        /// Gets or Sets DoNotDisturb
        /// </summary>
        [DataMember(Name = "do_not_disturb", EmitDefaultValue = false)]
        public ModelsVOIPSharedDoNotDisturb DoNotDisturb { get; set; }

        /// <summary>
        /// Gets or Sets MusicOnHold
        /// </summary>
        [DataMember(Name = "music_on_hold", EmitDefaultValue = false)]
        public ModelsVOIPAccountMusicOnHold MusicOnHold { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Realm
        /// </summary>
        [DataMember(Name = "realm", EmitDefaultValue = false)]
        public string Realm { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name = "timezone", IsRequired = true, EmitDefaultValue = true)]
        public string Timezone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVOIPAccountAddData {\n");
            sb.Append("  CallerId: ").Append(CallerId).Append("\n");
            sb.Append("  DoNotDisturb: ").Append(DoNotDisturb).Append("\n");
            sb.Append("  MusicOnHold: ").Append(MusicOnHold).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Realm: ").Append(Realm).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 128)
            {
                yield return new ValidationResult("Invalid value for Name, length must be less than 128.", new [] { "Name" });
            }

            // Realm (string) maxLength
            if (this.Realm != null && this.Realm.Length > 50)
            {
                yield return new ValidationResult("Invalid value for Realm, length must be less than 50.", new [] { "Realm" });
            }

            // Realm (string) minLength
            if (this.Realm != null && this.Realm.Length < 3)
            {
                yield return new ValidationResult("Invalid value for Realm, length must be greater than 3.", new [] { "Realm" });
            }

            // Timezone (string) maxLength
            if (this.Timezone != null && this.Timezone.Length > 32)
            {
                yield return new ValidationResult("Invalid value for Timezone, length must be less than 32.", new [] { "Timezone" });
            }

            // Timezone (string) minLength
            if (this.Timezone != null && this.Timezone.Length < 5)
            {
                yield return new ValidationResult("Invalid value for Timezone, length must be greater than 5.", new [] { "Timezone" });
            }

            yield break;
        }
    }

}

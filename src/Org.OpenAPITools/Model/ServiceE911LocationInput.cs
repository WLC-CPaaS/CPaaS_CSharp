/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceE911LocationInput
    /// </summary>
    [DataContract(Name = "service.E911LocationInput")]
    public partial class ServiceE911LocationInput : IValidatableObject
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum ADDRESS for value: ADDRESS
            /// </summary>
            [EnumMember(Value = "ADDRESS")]
            ADDRESS = 1
        }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceE911LocationInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceE911LocationInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceE911LocationInput" /> class.
        /// </summary>
        /// <param name="address1">address1.</param>
        /// <param name="address2">address2.</param>
        /// <param name="community">community.</param>
        /// <param name="plusFour">plusFour.</param>
        /// <param name="postalCode">postalCode.</param>
        /// <param name="state">state.</param>
        /// <param name="type">type (required).</param>
        public ServiceE911LocationInput(string address1 = default, string address2 = default, string community = default, string plusFour = default, string postalCode = default, string state = default, TypeEnum type = default)
        {
            this.Type = type;
            this.Address1 = address1;
            this.Address2 = address2;
            this.Community = community;
            this.PlusFour = plusFour;
            this.PostalCode = postalCode;
            this.State = state;
        }

        /// <summary>
        /// Gets or Sets Address1
        /// </summary>
        [DataMember(Name = "address_1", EmitDefaultValue = false)]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name = "address_2", EmitDefaultValue = false)]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets Community
        /// </summary>
        [DataMember(Name = "community", EmitDefaultValue = false)]
        public string Community { get; set; }

        /// <summary>
        /// Gets or Sets PlusFour
        /// </summary>
        [DataMember(Name = "plus_four", EmitDefaultValue = false)]
        public string PlusFour { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name = "postal_code", EmitDefaultValue = false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceE911LocationInput {\n");
            sb.Append("  Address1: ").Append(Address1).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  Community: ").Append(Community).Append("\n");
            sb.Append("  PlusFour: ").Append(PlusFour).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

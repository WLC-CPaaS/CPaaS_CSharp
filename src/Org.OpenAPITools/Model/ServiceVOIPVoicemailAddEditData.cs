/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVOIPVoicemailAddEditData
    /// </summary>
    [DataContract(Name = "service.VOIPVoicemailAddEditData")]
    public partial class ServiceVOIPVoicemailAddEditData : IValidatableObject
    {
        /// <summary>
        /// Defines MediaExtension
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum MediaExtensionEnum
        {
            /// <summary>
            /// Enum Mp3 for value: mp3
            /// </summary>
            [EnumMember(Value = "mp3")]
            Mp3 = 1,

            /// <summary>
            /// Enum Mp4 for value: mp4
            /// </summary>
            [EnumMember(Value = "mp4")]
            Mp4 = 2,

            /// <summary>
            /// Enum Wav for value: wav
            /// </summary>
            [EnumMember(Value = "wav")]
            Wav = 3
        }


        /// <summary>
        /// Gets or Sets MediaExtension
        /// </summary>
        [DataMember(Name = "media_extension", EmitDefaultValue = false)]
        public MediaExtensionEnum? MediaExtension { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPVoicemailAddEditData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceVOIPVoicemailAddEditData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPVoicemailAddEditData" /> class.
        /// </summary>
        /// <param name="mailbox">mailbox (required).</param>
        /// <param name="media">media.</param>
        /// <param name="mediaExtension">mediaExtension.</param>
        /// <param name="name">name (required).</param>
        /// <param name="ownerId">ownerId.</param>
        /// <param name="pin">pin.</param>
        /// <param name="requirePin">requirePin.</param>
        /// <param name="timezone">timezone.</param>
        public ServiceVOIPVoicemailAddEditData(string mailbox = default, ServiceVoicemailMedia media = default, MediaExtensionEnum? mediaExtension = default, string name = default, string ownerId = default, string pin = default, bool requirePin = default, string timezone = default)
        {
            // to ensure "mailbox" is required (not null)
            if (mailbox == null)
            {
                throw new ArgumentNullException("mailbox is a required property for ServiceVOIPVoicemailAddEditData and cannot be null");
            }
            this.Mailbox = mailbox;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for ServiceVOIPVoicemailAddEditData and cannot be null");
            }
            this.Name = name;
            this.Media = media;
            this.MediaExtension = mediaExtension;
            this.OwnerId = ownerId;
            this.Pin = pin;
            this.RequirePin = requirePin;
            this.Timezone = timezone;
        }

        /// <summary>
        /// Gets or Sets Mailbox
        /// </summary>
        [DataMember(Name = "mailbox", IsRequired = true, EmitDefaultValue = true)]
        public string Mailbox { get; set; }

        /// <summary>
        /// Gets or Sets Media
        /// </summary>
        [DataMember(Name = "media", EmitDefaultValue = false)]
        public ServiceVoicemailMedia Media { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OwnerId
        /// </summary>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// Gets or Sets Pin
        /// </summary>
        [DataMember(Name = "pin", EmitDefaultValue = false)]
        public string Pin { get; set; }

        /// <summary>
        /// Gets or Sets RequirePin
        /// </summary>
        [DataMember(Name = "require_pin", EmitDefaultValue = true)]
        public bool RequirePin { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name = "timezone", EmitDefaultValue = false)]
        public string Timezone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVOIPVoicemailAddEditData {\n");
            sb.Append("  Mailbox: ").Append(Mailbox).Append("\n");
            sb.Append("  Media: ").Append(Media).Append("\n");
            sb.Append("  MediaExtension: ").Append(MediaExtension).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  Pin: ").Append(Pin).Append("\n");
            sb.Append("  RequirePin: ").Append(RequirePin).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Mailbox (string) maxLength
            if (this.Mailbox != null && this.Mailbox.Length > 30)
            {
                yield return new ValidationResult("Invalid value for Mailbox, length must be less than 30.", new [] { "Mailbox" });
            }

            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 128)
            {
                yield return new ValidationResult("Invalid value for Name, length must be less than 128.", new [] { "Name" });
            }

            // Pin (string) maxLength
            if (this.Pin != null && this.Pin.Length > 6)
            {
                yield return new ValidationResult("Invalid value for Pin, length must be less than 6.", new [] { "Pin" });
            }

            // Pin (string) minLength
            if (this.Pin != null && this.Pin.Length < 4)
            {
                yield return new ValidationResult("Invalid value for Pin, length must be greater than 4.", new [] { "Pin" });
            }

            // Timezone (string) maxLength
            if (this.Timezone != null && this.Timezone.Length > 32)
            {
                yield return new ValidationResult("Invalid value for Timezone, length must be less than 32.", new [] { "Timezone" });
            }

            // Timezone (string) minLength
            if (this.Timezone != null && this.Timezone.Length < 5)
            {
                yield return new ValidationResult("Invalid value for Timezone, length must be greater than 5.", new [] { "Timezone" });
            }

            yield break;
        }
    }

}

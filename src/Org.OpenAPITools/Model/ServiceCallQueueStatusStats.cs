/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceCallQueueStatusStats
    /// </summary>
    [DataContract(Name = "service.CallQueueStatusStats")]
    public partial class ServiceCallQueueStatusStats : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCallQueueStatusStats" /> class.
        /// </summary>
        /// <param name="abandonedSessions">abandonedSessions.</param>
        /// <param name="activeSessionCount">activeSessionCount.</param>
        /// <param name="averageWait">averageWait.</param>
        /// <param name="estimatedWait">estimatedWait.</param>
        /// <param name="longestWait">longestWait.</param>
        /// <param name="missedSessions">missedSessions.</param>
        /// <param name="recipientCount">recipientCount.</param>
        /// <param name="totalSessions">totalSessions.</param>
        public ServiceCallQueueStatusStats(int abandonedSessions = default, int activeSessionCount = default, int averageWait = default, int estimatedWait = default, int longestWait = default, int missedSessions = default, int recipientCount = default, int totalSessions = default)
        {
            this.AbandonedSessions = abandonedSessions;
            this.ActiveSessionCount = activeSessionCount;
            this.AverageWait = averageWait;
            this.EstimatedWait = estimatedWait;
            this.LongestWait = longestWait;
            this.MissedSessions = missedSessions;
            this.RecipientCount = recipientCount;
            this.TotalSessions = totalSessions;
        }

        /// <summary>
        /// Gets or Sets AbandonedSessions
        /// </summary>
        [DataMember(Name = "abandoned_sessions", EmitDefaultValue = false)]
        public int AbandonedSessions { get; set; }

        /// <summary>
        /// Gets or Sets ActiveSessionCount
        /// </summary>
        [DataMember(Name = "active_session_count", EmitDefaultValue = false)]
        public int ActiveSessionCount { get; set; }

        /// <summary>
        /// Gets or Sets AverageWait
        /// </summary>
        [DataMember(Name = "average_wait", EmitDefaultValue = false)]
        public int AverageWait { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedWait
        /// </summary>
        [DataMember(Name = "estimated_wait", EmitDefaultValue = false)]
        public int EstimatedWait { get; set; }

        /// <summary>
        /// Gets or Sets LongestWait
        /// </summary>
        [DataMember(Name = "longest_wait", EmitDefaultValue = false)]
        public int LongestWait { get; set; }

        /// <summary>
        /// Gets or Sets MissedSessions
        /// </summary>
        [DataMember(Name = "missed_sessions", EmitDefaultValue = false)]
        public int MissedSessions { get; set; }

        /// <summary>
        /// Gets or Sets RecipientCount
        /// </summary>
        [DataMember(Name = "recipient_count", EmitDefaultValue = false)]
        public int RecipientCount { get; set; }

        /// <summary>
        /// Gets or Sets TotalSessions
        /// </summary>
        [DataMember(Name = "total_sessions", EmitDefaultValue = false)]
        public int TotalSessions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceCallQueueStatusStats {\n");
            sb.Append("  AbandonedSessions: ").Append(AbandonedSessions).Append("\n");
            sb.Append("  ActiveSessionCount: ").Append(ActiveSessionCount).Append("\n");
            sb.Append("  AverageWait: ").Append(AverageWait).Append("\n");
            sb.Append("  EstimatedWait: ").Append(EstimatedWait).Append("\n");
            sb.Append("  LongestWait: ").Append(LongestWait).Append("\n");
            sb.Append("  MissedSessions: ").Append(MissedSessions).Append("\n");
            sb.Append("  RecipientCount: ").Append(RecipientCount).Append("\n");
            sb.Append("  TotalSessions: ").Append(TotalSessions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

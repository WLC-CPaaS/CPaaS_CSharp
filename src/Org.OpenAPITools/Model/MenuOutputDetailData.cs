/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// MenuOutputDetailData
    /// </summary>
    [DataContract(Name = "MenuOutputDetailData")]
    public partial class MenuOutputDetailData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MenuOutputDetailData" /> class.
        /// </summary>
        /// <param name="id">ID of the menu.</param>
        /// <param name="media">The media (prompt) parameters.</param>
        /// <param name="name">A friendly name for the menu.</param>
        /// <param name="timeout">The amount of time (in milliseconds) to wait for the caller to begin entering digits.</param>
        public MenuOutputDetailData(string id = default, MenuOutputDetailMedia media = default, string name = default, int timeout = default)
        {
            this.Id = id;
            this.Media = media;
            this.Name = name;
            this.Timeout = timeout;
        }

        /// <summary>
        /// ID of the menu
        /// </summary>
        /// <value>ID of the menu</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The media (prompt) parameters
        /// </summary>
        /// <value>The media (prompt) parameters</value>
        [DataMember(Name = "media", EmitDefaultValue = false)]
        public MenuOutputDetailMedia Media { get; set; }

        /// <summary>
        /// A friendly name for the menu
        /// </summary>
        /// <value>A friendly name for the menu</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The amount of time (in milliseconds) to wait for the caller to begin entering digits
        /// </summary>
        /// <value>The amount of time (in milliseconds) to wait for the caller to begin entering digits</value>
        [DataMember(Name = "timeout", EmitDefaultValue = false)]
        public int Timeout { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MenuOutputDetailData {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Media: ").Append(Media).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Timeout: ").Append(Timeout).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceStoragePlanDatabaseTypes
    /// </summary>
    [DataContract(Name = "service.StoragePlanDatabaseTypes")]
    public partial class ServiceStoragePlanDatabaseTypes : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceStoragePlanDatabaseTypes" /> class.
        /// </summary>
        /// <param name="callRecording">callRecording.</param>
        /// <param name="fax">fax.</param>
        /// <param name="function">function.</param>
        /// <param name="mailboxMessage">mailboxMessage.</param>
        /// <param name="media">media.</param>
        public ServiceStoragePlanDatabaseTypes(ServiceStoragePlanDatabaseDocument callRecording = default, ServiceStoragePlanDatabaseDocument fax = default, ServiceStoragePlanDatabaseDocument function = default, ServiceStoragePlanDatabaseDocument mailboxMessage = default, ServiceStoragePlanDatabaseDocument media = default)
        {
            this.CallRecording = callRecording;
            this.Fax = fax;
            this.Function = function;
            this.MailboxMessage = mailboxMessage;
            this.Media = media;
        }

        /// <summary>
        /// Gets or Sets CallRecording
        /// </summary>
        [DataMember(Name = "call_recording", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabaseDocument CallRecording { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name = "fax", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabaseDocument Fax { get; set; }

        /// <summary>
        /// Gets or Sets Function
        /// </summary>
        [DataMember(Name = "function", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabaseDocument Function { get; set; }

        /// <summary>
        /// Gets or Sets MailboxMessage
        /// </summary>
        [DataMember(Name = "mailbox_message", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabaseDocument MailboxMessage { get; set; }

        /// <summary>
        /// Gets or Sets Media
        /// </summary>
        [DataMember(Name = "media", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabaseDocument Media { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceStoragePlanDatabaseTypes {\n");
            sb.Append("  CallRecording: ").Append(CallRecording).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Function: ").Append(Function).Append("\n");
            sb.Append("  MailboxMessage: ").Append(MailboxMessage).Append("\n");
            sb.Append("  Media: ").Append(Media).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

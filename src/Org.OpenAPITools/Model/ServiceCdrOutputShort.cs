/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceCdrOutputShort
    /// </summary>
    [DataContract(Name = "service.CdrOutputShort")]
    public partial class ServiceCdrOutputShort : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCdrOutputShort" /> class.
        /// </summary>
        /// <param name="authorizingId">authorizingId.</param>
        /// <param name="billingSeconds">billingSeconds.</param>
        /// <param name="bridgeId">bridgeId.</param>
        /// <param name="callId">callId.</param>
        /// <param name="callPriority">callPriority.</param>
        /// <param name="callType">callType.</param>
        /// <param name="calleeIdName">calleeIdName.</param>
        /// <param name="calleeIdNumber">calleeIdNumber.</param>
        /// <param name="callerIdName">callerIdName.</param>
        /// <param name="callerIdNumber">callerIdNumber.</param>
        /// <param name="callingFrom">callingFrom.</param>
        /// <param name="cost">cost.</param>
        /// <param name="dialedNumber">dialedNumber.</param>
        /// <param name="direction">direction.</param>
        /// <param name="durationSeconds">durationSeconds.</param>
        /// <param name="from">from.</param>
        /// <param name="hangupCause">hangupCause.</param>
        /// <param name="id">id.</param>
        /// <param name="interactionId">interactionId.</param>
        /// <param name="mediaRecordings">mediaRecordings.</param>
        /// <param name="mediaServer">mediaServer.</param>
        /// <param name="otherLegCallId">otherLegCallId.</param>
        /// <param name="ownerId">ownerId.</param>
        /// <param name="rate">rate.</param>
        /// <param name="rateName">rateName.</param>
        /// <param name="recordingUrl">recordingUrl.</param>
        /// <param name="request">request.</param>
        /// <param name="timestamp">timestamp.</param>
        /// <param name="timestampDatetime">timestampDatetime.</param>
        /// <param name="to">to.</param>
        public ServiceCdrOutputShort(string authorizingId = default, int billingSeconds = default, string bridgeId = default, string callId = default, string callPriority = default, string callType = default, string calleeIdName = default, string calleeIdNumber = default, string callerIdName = default, string callerIdNumber = default, string callingFrom = default, string cost = default, string dialedNumber = default, string direction = default, int durationSeconds = default, string from = default, string hangupCause = default, string id = default, string interactionId = default, List<Object> mediaRecordings = default, string mediaServer = default, string otherLegCallId = default, string ownerId = default, string rate = default, string rateName = default, string recordingUrl = default, string request = default, int timestamp = default, string timestampDatetime = default, string to = default)
        {
            this.AuthorizingId = authorizingId;
            this.BillingSeconds = billingSeconds;
            this.BridgeId = bridgeId;
            this.CallId = callId;
            this.CallPriority = callPriority;
            this.CallType = callType;
            this.CalleeIdName = calleeIdName;
            this.CalleeIdNumber = calleeIdNumber;
            this.CallerIdName = callerIdName;
            this.CallerIdNumber = callerIdNumber;
            this.CallingFrom = callingFrom;
            this.Cost = cost;
            this.DialedNumber = dialedNumber;
            this.Direction = direction;
            this.DurationSeconds = durationSeconds;
            this.From = from;
            this.HangupCause = hangupCause;
            this.Id = id;
            this.InteractionId = interactionId;
            this.MediaRecordings = mediaRecordings;
            this.MediaServer = mediaServer;
            this.OtherLegCallId = otherLegCallId;
            this.OwnerId = ownerId;
            this.Rate = rate;
            this.RateName = rateName;
            this.RecordingUrl = recordingUrl;
            this.Request = request;
            this.Timestamp = timestamp;
            this.TimestampDatetime = timestampDatetime;
            this.To = to;
        }

        /// <summary>
        /// Gets or Sets AuthorizingId
        /// </summary>
        [DataMember(Name = "authorizing_id", EmitDefaultValue = false)]
        public string AuthorizingId { get; set; }

        /// <summary>
        /// Gets or Sets BillingSeconds
        /// </summary>
        [DataMember(Name = "billing_seconds", EmitDefaultValue = false)]
        public int BillingSeconds { get; set; }

        /// <summary>
        /// Gets or Sets BridgeId
        /// </summary>
        [DataMember(Name = "bridge_id", EmitDefaultValue = false)]
        public string BridgeId { get; set; }

        /// <summary>
        /// Gets or Sets CallId
        /// </summary>
        [DataMember(Name = "call_id", EmitDefaultValue = false)]
        public string CallId { get; set; }

        /// <summary>
        /// Gets or Sets CallPriority
        /// </summary>
        [DataMember(Name = "call_priority", EmitDefaultValue = false)]
        public string CallPriority { get; set; }

        /// <summary>
        /// Gets or Sets CallType
        /// </summary>
        [DataMember(Name = "call_type", EmitDefaultValue = false)]
        public string CallType { get; set; }

        /// <summary>
        /// Gets or Sets CalleeIdName
        /// </summary>
        [DataMember(Name = "callee_id_name", EmitDefaultValue = false)]
        public string CalleeIdName { get; set; }

        /// <summary>
        /// Gets or Sets CalleeIdNumber
        /// </summary>
        [DataMember(Name = "callee_id_number", EmitDefaultValue = false)]
        public string CalleeIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdName
        /// </summary>
        [DataMember(Name = "caller_id_name", EmitDefaultValue = false)]
        public string CallerIdName { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdNumber
        /// </summary>
        [DataMember(Name = "caller_id_number", EmitDefaultValue = false)]
        public string CallerIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets CallingFrom
        /// </summary>
        [DataMember(Name = "calling_from", EmitDefaultValue = false)]
        public string CallingFrom { get; set; }

        /// <summary>
        /// Gets or Sets Cost
        /// </summary>
        [DataMember(Name = "cost", EmitDefaultValue = false)]
        public string Cost { get; set; }

        /// <summary>
        /// Gets or Sets DialedNumber
        /// </summary>
        [DataMember(Name = "dialed_number", EmitDefaultValue = false)]
        public string DialedNumber { get; set; }

        /// <summary>
        /// Gets or Sets Direction
        /// </summary>
        [DataMember(Name = "direction", EmitDefaultValue = false)]
        public string Direction { get; set; }

        /// <summary>
        /// Gets or Sets DurationSeconds
        /// </summary>
        [DataMember(Name = "duration_seconds", EmitDefaultValue = false)]
        public int DurationSeconds { get; set; }

        /// <summary>
        /// Gets or Sets From
        /// </summary>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        public string From { get; set; }

        /// <summary>
        /// Gets or Sets HangupCause
        /// </summary>
        [DataMember(Name = "hangup_cause", EmitDefaultValue = false)]
        public string HangupCause { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets InteractionId
        /// </summary>
        [DataMember(Name = "interaction_id", EmitDefaultValue = false)]
        public string InteractionId { get; set; }

        /// <summary>
        /// Gets or Sets MediaRecordings
        /// </summary>
        [DataMember(Name = "media_recordings", EmitDefaultValue = false)]
        public List<Object> MediaRecordings { get; set; }

        /// <summary>
        /// Gets or Sets MediaServer
        /// </summary>
        [DataMember(Name = "media_server", EmitDefaultValue = false)]
        public string MediaServer { get; set; }

        /// <summary>
        /// Gets or Sets OtherLegCallId
        /// </summary>
        [DataMember(Name = "other_leg_call_id", EmitDefaultValue = false)]
        public string OtherLegCallId { get; set; }

        /// <summary>
        /// Gets or Sets OwnerId
        /// </summary>
        [DataMember(Name = "owner_id", EmitDefaultValue = false)]
        public string OwnerId { get; set; }

        /// <summary>
        /// Gets or Sets Rate
        /// </summary>
        [DataMember(Name = "rate", EmitDefaultValue = false)]
        public string Rate { get; set; }

        /// <summary>
        /// Gets or Sets RateName
        /// </summary>
        [DataMember(Name = "rate_name", EmitDefaultValue = false)]
        public string RateName { get; set; }

        /// <summary>
        /// Gets or Sets RecordingUrl
        /// </summary>
        [DataMember(Name = "recording_url", EmitDefaultValue = false)]
        public string RecordingUrl { get; set; }

        /// <summary>
        /// Gets or Sets Request
        /// </summary>
        [DataMember(Name = "request", EmitDefaultValue = false)]
        public string Request { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public int Timestamp { get; set; }

        /// <summary>
        /// Gets or Sets TimestampDatetime
        /// </summary>
        [DataMember(Name = "timestamp_datetime", EmitDefaultValue = false)]
        public string TimestampDatetime { get; set; }

        /// <summary>
        /// Gets or Sets To
        /// </summary>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceCdrOutputShort {\n");
            sb.Append("  AuthorizingId: ").Append(AuthorizingId).Append("\n");
            sb.Append("  BillingSeconds: ").Append(BillingSeconds).Append("\n");
            sb.Append("  BridgeId: ").Append(BridgeId).Append("\n");
            sb.Append("  CallId: ").Append(CallId).Append("\n");
            sb.Append("  CallPriority: ").Append(CallPriority).Append("\n");
            sb.Append("  CallType: ").Append(CallType).Append("\n");
            sb.Append("  CalleeIdName: ").Append(CalleeIdName).Append("\n");
            sb.Append("  CalleeIdNumber: ").Append(CalleeIdNumber).Append("\n");
            sb.Append("  CallerIdName: ").Append(CallerIdName).Append("\n");
            sb.Append("  CallerIdNumber: ").Append(CallerIdNumber).Append("\n");
            sb.Append("  CallingFrom: ").Append(CallingFrom).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  DialedNumber: ").Append(DialedNumber).Append("\n");
            sb.Append("  Direction: ").Append(Direction).Append("\n");
            sb.Append("  DurationSeconds: ").Append(DurationSeconds).Append("\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  HangupCause: ").Append(HangupCause).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  InteractionId: ").Append(InteractionId).Append("\n");
            sb.Append("  MediaRecordings: ").Append(MediaRecordings).Append("\n");
            sb.Append("  MediaServer: ").Append(MediaServer).Append("\n");
            sb.Append("  OtherLegCallId: ").Append(OtherLegCallId).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  Rate: ").Append(Rate).Append("\n");
            sb.Append("  RateName: ").Append(RateName).Append("\n");
            sb.Append("  RecordingUrl: ").Append(RecordingUrl).Append("\n");
            sb.Append("  Request: ").Append(Request).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  TimestampDatetime: ").Append(TimestampDatetime).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

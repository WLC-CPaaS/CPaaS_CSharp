/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVOIPChannelRunActionData
    /// </summary>
    [DataContract(Name = "service.VOIPChannelRunActionData")]
    public partial class ServiceVOIPChannelRunActionData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPChannelRunActionData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceVOIPChannelRunActionData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPChannelRunActionData" /> class.
        /// </summary>
        /// <param name="action">action (required).</param>
        /// <param name="moh">moh.</param>
        /// <param name="takebackDtmf">takebackDtmf.</param>
        /// <param name="target">target.</param>
        public ServiceVOIPChannelRunActionData(string action = default, string moh = default, string takebackDtmf = default, string target = default)
        {
            // to ensure "action" is required (not null)
            if (action == null)
            {
                throw new ArgumentNullException("action is a required property for ServiceVOIPChannelRunActionData and cannot be null");
            }
            this.Action = action;
            this.Moh = moh;
            this.TakebackDtmf = takebackDtmf;
            this.Target = target;
        }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public string Action { get; set; }

        /// <summary>
        /// Gets or Sets Moh
        /// </summary>
        [DataMember(Name = "moh", EmitDefaultValue = false)]
        public string Moh { get; set; }

        /// <summary>
        /// Gets or Sets TakebackDtmf
        /// </summary>
        [DataMember(Name = "takeback_dtmf", EmitDefaultValue = false)]
        public string TakebackDtmf { get; set; }

        /// <summary>
        /// Gets or Sets Target
        /// </summary>
        [DataMember(Name = "target", EmitDefaultValue = false)]
        public string Target { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVOIPChannelRunActionData {\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  Moh: ").Append(Moh).Append("\n");
            sb.Append("  TakebackDtmf: ").Append(TakebackDtmf).Append("\n");
            sb.Append("  Target: ").Append(Target).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModelsUserOutputFull
    /// </summary>
    [DataContract(Name = "models.UserOutputFull")]
    public partial class ModelsUserOutputFull : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelsUserOutputFull" /> class.
        /// </summary>
        /// <param name="callForward">callForward.</param>
        /// <param name="callRecording">callRecording.</param>
        /// <param name="callerId">callerId.</param>
        /// <param name="doNotDisturb">doNotDisturb.</param>
        /// <param name="email">email.</param>
        /// <param name="enabled">enabled.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="id">id.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="musicOnHold">musicOnHold.</param>
        /// <param name="presenceId">presenceId.</param>
        /// <param name="timezone">timezone.</param>
        /// <param name="verified">verified.</param>
        public ModelsUserOutputFull(ModelsCallForward callForward = default, ModelsCallRecordingSettings callRecording = default, ModelsUserOutputFullCallerid callerId = default, ModelsVOIPSharedDoNotDisturb doNotDisturb = default, string email = default, bool enabled = default, string firstName = default, string id = default, string lastName = default, ModelsMusicOnHold musicOnHold = default, string presenceId = default, string timezone = default, bool verified = default)
        {
            this.CallForward = callForward;
            this.CallRecording = callRecording;
            this.CallerId = callerId;
            this.DoNotDisturb = doNotDisturb;
            this.Email = email;
            this.Enabled = enabled;
            this.FirstName = firstName;
            this.Id = id;
            this.LastName = lastName;
            this.MusicOnHold = musicOnHold;
            this.PresenceId = presenceId;
            this.Timezone = timezone;
            this.Verified = verified;
        }

        /// <summary>
        /// Gets or Sets CallForward
        /// </summary>
        [DataMember(Name = "call_forward", EmitDefaultValue = false)]
        public ModelsCallForward CallForward { get; set; }

        /// <summary>
        /// Gets or Sets CallRecording
        /// </summary>
        [DataMember(Name = "call_recording", EmitDefaultValue = false)]
        public ModelsCallRecordingSettings CallRecording { get; set; }

        /// <summary>
        /// Gets or Sets CallerId
        /// </summary>
        [DataMember(Name = "caller_id", EmitDefaultValue = false)]
        public ModelsUserOutputFullCallerid CallerId { get; set; }

        /// <summary>
        /// Gets or Sets DoNotDisturb
        /// </summary>
        [DataMember(Name = "do_not_disturb", EmitDefaultValue = false)]
        public ModelsVOIPSharedDoNotDisturb DoNotDisturb { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "first_name", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "last_name", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets MusicOnHold
        /// </summary>
        [DataMember(Name = "music_on_hold", EmitDefaultValue = false)]
        public ModelsMusicOnHold MusicOnHold { get; set; }

        /// <summary>
        /// Gets or Sets PresenceId
        /// </summary>
        [DataMember(Name = "presence_id", EmitDefaultValue = false)]
        public string PresenceId { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name = "timezone", EmitDefaultValue = false)]
        public string Timezone { get; set; }

        /// <summary>
        /// Gets or Sets Verified
        /// </summary>
        [DataMember(Name = "verified", EmitDefaultValue = true)]
        public bool Verified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModelsUserOutputFull {\n");
            sb.Append("  CallForward: ").Append(CallForward).Append("\n");
            sb.Append("  CallRecording: ").Append(CallRecording).Append("\n");
            sb.Append("  CallerId: ").Append(CallerId).Append("\n");
            sb.Append("  DoNotDisturb: ").Append(DoNotDisturb).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  MusicOnHold: ").Append(MusicOnHold).Append("\n");
            sb.Append("  PresenceId: ").Append(PresenceId).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  Verified: ").Append(Verified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

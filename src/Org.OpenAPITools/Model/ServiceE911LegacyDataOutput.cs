/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceE911LegacyDataOutput
    /// </summary>
    [DataContract(Name = "service.E911LegacyDataOutput")]
    public partial class ServiceE911LegacyDataOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceE911LegacyDataOutput" /> class.
        /// </summary>
        /// <param name="houseNumber">houseNumber.</param>
        /// <param name="predirectional">predirectional.</param>
        /// <param name="streetName">streetName.</param>
        /// <param name="suite">suite.</param>
        public ServiceE911LegacyDataOutput(string houseNumber = default, string predirectional = default, string streetName = default, string suite = default)
        {
            this.HouseNumber = houseNumber;
            this.Predirectional = predirectional;
            this.StreetName = streetName;
            this.Suite = suite;
        }

        /// <summary>
        /// Gets or Sets HouseNumber
        /// </summary>
        [DataMember(Name = "house_number", EmitDefaultValue = false)]
        public string HouseNumber { get; set; }

        /// <summary>
        /// Gets or Sets Predirectional
        /// </summary>
        [DataMember(Name = "predirectional", EmitDefaultValue = false)]
        public string Predirectional { get; set; }

        /// <summary>
        /// Gets or Sets StreetName
        /// </summary>
        [DataMember(Name = "street_name", EmitDefaultValue = false)]
        public string StreetName { get; set; }

        /// <summary>
        /// Gets or Sets Suite
        /// </summary>
        [DataMember(Name = "suite", EmitDefaultValue = false)]
        public string Suite { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceE911LegacyDataOutput {\n");
            sb.Append("  HouseNumber: ").Append(HouseNumber).Append("\n");
            sb.Append("  Predirectional: ").Append(Predirectional).Append("\n");
            sb.Append("  StreetName: ").Append(StreetName).Append("\n");
            sb.Append("  Suite: ").Append(Suite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

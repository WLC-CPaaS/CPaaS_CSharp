/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceCallflowOutputFull
    /// </summary>
    [DataContract(Name = "service.CallflowOutputFull")]
    public partial class ServiceCallflowOutputFull : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCallflowOutputFull" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceCallflowOutputFull() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCallflowOutputFull" /> class.
        /// </summary>
        /// <param name="featurecode">featurecode.</param>
        /// <param name="flow">flow (required).</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="numbers">numbers (required).</param>
        /// <param name="patterns">patterns (required).</param>
        public ServiceCallflowOutputFull(ServiceFeatureCode featurecode = default, ServiceCallflowAddEditFlowData flow = default, string id = default, string name = default, List<string> numbers = default, List<string> patterns = default)
        {
            // to ensure "flow" is required (not null)
            if (flow == null)
            {
                throw new ArgumentNullException("flow is a required property for ServiceCallflowOutputFull and cannot be null");
            }
            this.Flow = flow;
            // to ensure "numbers" is required (not null)
            if (numbers == null)
            {
                throw new ArgumentNullException("numbers is a required property for ServiceCallflowOutputFull and cannot be null");
            }
            this.Numbers = numbers;
            // to ensure "patterns" is required (not null)
            if (patterns == null)
            {
                throw new ArgumentNullException("patterns is a required property for ServiceCallflowOutputFull and cannot be null");
            }
            this.Patterns = patterns;
            this.Featurecode = featurecode;
            this.Id = id;
            this.Name = name;
        }

        /// <summary>
        /// Gets or Sets Featurecode
        /// </summary>
        [DataMember(Name = "featurecode", EmitDefaultValue = false)]
        public ServiceFeatureCode Featurecode { get; set; }

        /// <summary>
        /// Gets or Sets Flow
        /// </summary>
        [DataMember(Name = "flow", IsRequired = true, EmitDefaultValue = true)]
        public ServiceCallflowAddEditFlowData Flow { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Numbers
        /// </summary>
        [DataMember(Name = "numbers", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Numbers { get; set; }

        /// <summary>
        /// Gets or Sets Patterns
        /// </summary>
        [DataMember(Name = "patterns", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Patterns { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceCallflowOutputFull {\n");
            sb.Append("  Featurecode: ").Append(Featurecode).Append("\n");
            sb.Append("  Flow: ").Append(Flow).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Numbers: ").Append(Numbers).Append("\n");
            sb.Append("  Patterns: ").Append(Patterns).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Name (string) maxLength
            if (this.Name != null && this.Name.Length > 128)
            {
                yield return new ValidationResult("Invalid value for Name, length must be less than 128.", new [] { "Name" });
            }

            yield break;
        }
    }

}

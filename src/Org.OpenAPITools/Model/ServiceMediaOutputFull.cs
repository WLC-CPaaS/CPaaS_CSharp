/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceMediaOutputFull
    /// </summary>
    [DataContract(Name = "service.MediaOutputFull")]
    public partial class ServiceMediaOutputFull : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceMediaOutputFull" /> class.
        /// </summary>
        /// <param name="contentLength">contentLength.</param>
        /// <param name="contentType">contentType.</param>
        /// <param name="description">description.</param>
        /// <param name="id">id.</param>
        /// <param name="language">language.</param>
        /// <param name="mediaSource">mediaSource.</param>
        /// <param name="name">name.</param>
        /// <param name="streamable">streamable.</param>
        /// <param name="tts">tts.</param>
        public ServiceMediaOutputFull(int contentLength = default, string contentType = default, string description = default, string id = default, string language = default, string mediaSource = default, string name = default, bool streamable = default, ServiceTTS tts = default)
        {
            this.ContentLength = contentLength;
            this.ContentType = contentType;
            this.Description = description;
            this.Id = id;
            this.Language = language;
            this.MediaSource = mediaSource;
            this.Name = name;
            this.Streamable = streamable;
            this.Tts = tts;
        }

        /// <summary>
        /// Gets or Sets ContentLength
        /// </summary>
        [DataMember(Name = "content_length", EmitDefaultValue = false)]
        public int ContentLength { get; set; }

        /// <summary>
        /// Gets or Sets ContentType
        /// </summary>
        [DataMember(Name = "content_type", EmitDefaultValue = false)]
        public string ContentType { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name = "language", EmitDefaultValue = false)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets MediaSource
        /// </summary>
        [DataMember(Name = "media_source", EmitDefaultValue = false)]
        public string MediaSource { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Streamable
        /// </summary>
        [DataMember(Name = "streamable", EmitDefaultValue = true)]
        public bool Streamable { get; set; }

        /// <summary>
        /// Gets or Sets Tts
        /// </summary>
        [DataMember(Name = "tts", EmitDefaultValue = false)]
        public ServiceTTS Tts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceMediaOutputFull {\n");
            sb.Append("  ContentLength: ").Append(ContentLength).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  MediaSource: ").Append(MediaSource).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Streamable: ").Append(Streamable).Append("\n");
            sb.Append("  Tts: ").Append(Tts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

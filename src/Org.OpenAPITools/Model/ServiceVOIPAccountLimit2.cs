/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVOIPAccountLimit2
    /// </summary>
    [DataContract(Name = "service.VOIPAccountLimit2")]
    public partial class ServiceVOIPAccountLimit2 : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPAccountLimit2" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ServiceVOIPAccountLimit2() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVOIPAccountLimit2" /> class.
        /// </summary>
        /// <param name="inboundTrunks">inboundTrunks (required).</param>
        /// <param name="outboundTrunks">outboundTrunks (required).</param>
        /// <param name="twowayTrunks">twowayTrunks (required).</param>
        public ServiceVOIPAccountLimit2(int inboundTrunks = default, int outboundTrunks = default, int twowayTrunks = default)
        {
            this.InboundTrunks = inboundTrunks;
            this.OutboundTrunks = outboundTrunks;
            this.TwowayTrunks = twowayTrunks;
        }

        /// <summary>
        /// Gets or Sets InboundTrunks
        /// </summary>
        [DataMember(Name = "inbound_trunks", IsRequired = true, EmitDefaultValue = true)]
        public int InboundTrunks { get; set; }

        /// <summary>
        /// Gets or Sets OutboundTrunks
        /// </summary>
        [DataMember(Name = "outbound_trunks", IsRequired = true, EmitDefaultValue = true)]
        public int OutboundTrunks { get; set; }

        /// <summary>
        /// Gets or Sets TwowayTrunks
        /// </summary>
        [DataMember(Name = "twoway_trunks", IsRequired = true, EmitDefaultValue = true)]
        public int TwowayTrunks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVOIPAccountLimit2 {\n");
            sb.Append("  InboundTrunks: ").Append(InboundTrunks).Append("\n");
            sb.Append("  OutboundTrunks: ").Append(OutboundTrunks).Append("\n");
            sb.Append("  TwowayTrunks: ").Append(TwowayTrunks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // InboundTrunks (int) maximum
            if (this.InboundTrunks > (int)1000)
            {
                yield return new ValidationResult("Invalid value for InboundTrunks, must be a value less than or equal to 1000.", new [] { "InboundTrunks" });
            }

            // InboundTrunks (int) minimum
            if (this.InboundTrunks < (int)0)
            {
                yield return new ValidationResult("Invalid value for InboundTrunks, must be a value greater than or equal to 0.", new [] { "InboundTrunks" });
            }

            // OutboundTrunks (int) maximum
            if (this.OutboundTrunks > (int)1000)
            {
                yield return new ValidationResult("Invalid value for OutboundTrunks, must be a value less than or equal to 1000.", new [] { "OutboundTrunks" });
            }

            // OutboundTrunks (int) minimum
            if (this.OutboundTrunks < (int)0)
            {
                yield return new ValidationResult("Invalid value for OutboundTrunks, must be a value greater than or equal to 0.", new [] { "OutboundTrunks" });
            }

            // TwowayTrunks (int) maximum
            if (this.TwowayTrunks > (int)1000)
            {
                yield return new ValidationResult("Invalid value for TwowayTrunks, must be a value less than or equal to 1000.", new [] { "TwowayTrunks" });
            }

            // TwowayTrunks (int) minimum
            if (this.TwowayTrunks < (int)0)
            {
                yield return new ValidationResult("Invalid value for TwowayTrunks, must be a value greater than or equal to 0.", new [] { "TwowayTrunks" });
            }

            yield break;
        }
    }

}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceStoragePlan
    /// </summary>
    [DataContract(Name = "service.StoragePlan")]
    public partial class ServiceStoragePlan : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceStoragePlan" /> class.
        /// </summary>
        /// <param name="account">account.</param>
        /// <param name="aggregate">aggregate.</param>
        /// <param name="modb">modb.</param>
        /// <param name="varSystem">varSystem.</param>
        public ServiceStoragePlan(ServiceStoragePlanDatabase account = default, ServiceStoragePlanDatabase aggregate = default, ServiceStoragePlanDatabase modb = default, ServiceStoragePlanDatabase varSystem = default)
        {
            this.Account = account;
            this.Aggregate = aggregate;
            this.Modb = modb;
            this.System = varSystem;
        }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name = "account", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabase Account { get; set; }

        /// <summary>
        /// Gets or Sets Aggregate
        /// </summary>
        [DataMember(Name = "aggregate", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabase Aggregate { get; set; }

        /// <summary>
        /// Gets or Sets Modb
        /// </summary>
        [DataMember(Name = "modb", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabase Modb { get; set; }

        /// <summary>
        /// Gets or Sets System
        /// </summary>
        [DataMember(Name = "system", EmitDefaultValue = false)]
        public ServiceStoragePlanDatabase System { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceStoragePlan {\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  Aggregate: ").Append(Aggregate).Append("\n");
            sb.Append("  Modb: ").Append(Modb).Append("\n");
            sb.Append("  System: ").Append(System).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

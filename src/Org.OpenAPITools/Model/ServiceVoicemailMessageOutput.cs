/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceVoicemailMessageOutput
    /// </summary>
    [DataContract(Name = "service.VoicemailMessageOutput")]
    public partial class ServiceVoicemailMessageOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceVoicemailMessageOutput" /> class.
        /// </summary>
        /// <param name="callId">callId.</param>
        /// <param name="callerIdName">callerIdName.</param>
        /// <param name="callerIdNumber">callerIdNumber.</param>
        /// <param name="folder">folder.</param>
        /// <param name="from">from.</param>
        /// <param name="length">length.</param>
        /// <param name="mediaId">mediaId.</param>
        /// <param name="succeeded">succeeded.</param>
        /// <param name="timestamp">timestamp.</param>
        /// <param name="to">to.</param>
        public ServiceVoicemailMessageOutput(string callId = default, string callerIdName = default, string callerIdNumber = default, string folder = default, string from = default, int length = default, string mediaId = default, List<string> succeeded = default, int timestamp = default, string to = default)
        {
            this.CallId = callId;
            this.CallerIdName = callerIdName;
            this.CallerIdNumber = callerIdNumber;
            this.Folder = folder;
            this.From = from;
            this.Length = length;
            this.MediaId = mediaId;
            this.Succeeded = succeeded;
            this.Timestamp = timestamp;
            this.To = to;
        }

        /// <summary>
        /// Gets or Sets CallId
        /// </summary>
        [DataMember(Name = "call_id", EmitDefaultValue = false)]
        public string CallId { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdName
        /// </summary>
        [DataMember(Name = "caller_id_name", EmitDefaultValue = false)]
        public string CallerIdName { get; set; }

        /// <summary>
        /// Gets or Sets CallerIdNumber
        /// </summary>
        [DataMember(Name = "caller_id_number", EmitDefaultValue = false)]
        public string CallerIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets Folder
        /// </summary>
        [DataMember(Name = "folder", EmitDefaultValue = false)]
        public string Folder { get; set; }

        /// <summary>
        /// Gets or Sets From
        /// </summary>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        public string From { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = false)]
        public int Length { get; set; }

        /// <summary>
        /// Gets or Sets MediaId
        /// </summary>
        [DataMember(Name = "media_id", EmitDefaultValue = false)]
        public string MediaId { get; set; }

        /// <summary>
        /// Gets or Sets Succeeded
        /// </summary>
        [DataMember(Name = "succeeded", EmitDefaultValue = false)]
        public List<string> Succeeded { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public int Timestamp { get; set; }

        /// <summary>
        /// Gets or Sets To
        /// </summary>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceVoicemailMessageOutput {\n");
            sb.Append("  CallId: ").Append(CallId).Append("\n");
            sb.Append("  CallerIdName: ").Append(CallerIdName).Append("\n");
            sb.Append("  CallerIdNumber: ").Append(CallerIdNumber).Append("\n");
            sb.Append("  Folder: ").Append(Folder).Append("\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  MediaId: ").Append(MediaId).Append("\n");
            sb.Append("  Succeeded: ").Append(Succeeded).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ServiceCampaignImportOutput
    /// </summary>
    [DataContract(Name = "service.CampaignImportOutput")]
    public partial class ServiceCampaignImportOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceCampaignImportOutput" /> class.
        /// </summary>
        /// <param name="campaignId">campaignId.</param>
        /// <param name="createdDate">createdDate.</param>
        /// <param name="description">description.</param>
        /// <param name="messageClass">messageClass.</param>
        /// <param name="mnoStatusList">mnoStatusList.</param>
        /// <param name="secondaryDcaSharingStatus">secondaryDcaSharingStatus.</param>
        /// <param name="status">status.</param>
        public ServiceCampaignImportOutput(string campaignId = default, string createdDate = default, string description = default, string messageClass = default, List<ServiceCampaignImportOutputMnoStatusListInner> mnoStatusList = default, string secondaryDcaSharingStatus = default, string status = default)
        {
            this.CampaignId = campaignId;
            this.CreatedDate = createdDate;
            this.Description = description;
            this.MessageClass = messageClass;
            this.MnoStatusList = mnoStatusList;
            this.SecondaryDcaSharingStatus = secondaryDcaSharingStatus;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets CampaignId
        /// </summary>
        [DataMember(Name = "campaign_id", EmitDefaultValue = false)]
        public string CampaignId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name = "created_date", EmitDefaultValue = false)]
        public string CreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets MessageClass
        /// </summary>
        [DataMember(Name = "message_class", EmitDefaultValue = false)]
        public string MessageClass { get; set; }

        /// <summary>
        /// Gets or Sets MnoStatusList
        /// </summary>
        [DataMember(Name = "mno_status_list", EmitDefaultValue = false)]
        public List<ServiceCampaignImportOutputMnoStatusListInner> MnoStatusList { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryDcaSharingStatus
        /// </summary>
        [DataMember(Name = "secondary_dca_sharing_status", EmitDefaultValue = false)]
        public string SecondaryDcaSharingStatus { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServiceCampaignImportOutput {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  MessageClass: ").Append(MessageClass).Append("\n");
            sb.Append("  MnoStatusList: ").Append(MnoStatusList).Append("\n");
            sb.Append("  SecondaryDcaSharingStatus: ").Append(SecondaryDcaSharingStatus).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

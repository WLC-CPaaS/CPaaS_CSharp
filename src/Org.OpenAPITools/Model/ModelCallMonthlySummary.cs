/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ModelCallMonthlySummary
    /// </summary>
    [DataContract(Name = "model.CallMonthlySummary")]
    public partial class ModelCallMonthlySummary : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelCallMonthlySummary" /> class.
        /// </summary>
        /// <param name="accountId">accountId.</param>
        /// <param name="callMonth">callMonth.</param>
        /// <param name="callType">callType.</param>
        /// <param name="callYear">callYear.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="totalCallDuration">totalCallDuration.</param>
        public ModelCallMonthlySummary(string accountId = default, int callMonth = default, string callType = default, int callYear = default, string createdAt = default, string totalCallDuration = default)
        {
            this.AccountId = accountId;
            this.CallMonth = callMonth;
            this.CallType = callType;
            this.CallYear = callYear;
            this.CreatedAt = createdAt;
            this.TotalCallDuration = totalCallDuration;
        }

        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [DataMember(Name = "account_id", EmitDefaultValue = false)]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or Sets CallMonth
        /// </summary>
        [DataMember(Name = "call_month", EmitDefaultValue = false)]
        public int CallMonth { get; set; }

        /// <summary>
        /// Gets or Sets CallType
        /// </summary>
        [DataMember(Name = "call_type", EmitDefaultValue = false)]
        public string CallType { get; set; }

        /// <summary>
        /// Gets or Sets CallYear
        /// </summary>
        [DataMember(Name = "call_year", EmitDefaultValue = false)]
        public int CallYear { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets TotalCallDuration
        /// </summary>
        [DataMember(Name = "total_call_duration", EmitDefaultValue = false)]
        public string TotalCallDuration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModelCallMonthlySummary {\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  CallMonth: ").Append(CallMonth).Append("\n");
            sb.Append("  CallType: ").Append(CallType).Append("\n");
            sb.Append("  CallYear: ").Append(CallYear).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  TotalCallDuration: ").Append(TotalCallDuration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

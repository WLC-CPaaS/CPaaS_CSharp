/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhoneNumberApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Assigned Numbers List
        /// </summary>
        /// <remarks>
        /// Access all phone numbers assigned to a CPaaS account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsAccountPhonenumberGetAll</returns>
        ServiceDocsAccountPhonenumberGetAll V1AccountAccountidPhonenumberGet(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0);

        /// <summary>
        /// Get Assigned Numbers List
        /// </summary>
        /// <remarks>
        /// Access all phone numbers assigned to a CPaaS account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsAccountPhonenumberGetAll</returns>
        ApiResponse<ServiceDocsAccountPhonenumberGetAll> V1AccountAccountidPhonenumberGetWithHttpInfo(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0);
        /// <summary>
        /// Assign Number
        /// </summary>
        /// <remarks>
        /// Assign a purchased phone number to an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberAssignPost(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0);

        /// <summary>
        /// Assign Number
        /// </summary>
        /// <remarks>
        /// Assign a purchased phone number to an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberAssignPostWithHttpInfo(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0);
        /// <summary>
        /// Disconnect Number
        /// </summary>
        /// <remarks>
        /// Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberDisconnectPost(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0);

        /// <summary>
        /// Disconnect Number
        /// </summary>
        /// <remarks>
        /// Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberDisconnectPostWithHttpInfo(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0);
        /// <summary>
        /// Get Unassigned Numbers List
        /// </summary>
        /// <remarks>
        /// Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsAccountPhonenumberGetAll</returns>
        ServiceDocsAccountPhonenumberGetAll V1AccountPhonenumberGet(string? startKey = default, int? pageSize = default, int operationIndex = 0);

        /// <summary>
        /// Get Unassigned Numbers List
        /// </summary>
        /// <remarks>
        /// Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsAccountPhonenumberGetAll</returns>
        ApiResponse<ServiceDocsAccountPhonenumberGetAll> V1AccountPhonenumberGetWithHttpInfo(string? startKey = default, int? pageSize = default, int operationIndex = 0);
        /// <summary>
        /// Purchase Number
        /// </summary>
        /// <remarks>
        /// Purchase or activate a phone number for CPaaS accounts within your business.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsOrderPhonenumber</returns>
        ServiceDocsOrderPhonenumber V1AccountPhonenumberPost(List<string> phonenumber, int operationIndex = 0);

        /// <summary>
        /// Purchase Number
        /// </summary>
        /// <remarks>
        /// Purchase or activate a phone number for CPaaS accounts within your business.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsOrderPhonenumber</returns>
        ApiResponse<ServiceDocsOrderPhonenumber> V1AccountPhonenumberPostWithHttpInfo(List<string> phonenumber, int operationIndex = 0);
        /// <summary>
        /// Unassign Number
        /// </summary>
        /// <remarks>
        /// Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberUnassignPost(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0);

        /// <summary>
        /// Unassign Number
        /// </summary>
        /// <remarks>
        /// Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberUnassignPostWithHttpInfo(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0);
        /// <summary>
        /// Search New Numbers
        /// </summary>
        /// <remarks>
        /// Conduct a search for available phone numbers for purchase within an area code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsPhonenumberSearchGetAll</returns>
        ServiceDocsPhonenumberSearchGetAll V1PhonenumberSearchGet(string areaCode, int? quantity = default, int operationIndex = 0);

        /// <summary>
        /// Search New Numbers
        /// </summary>
        /// <remarks>
        /// Conduct a search for available phone numbers for purchase within an area code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsPhonenumberSearchGetAll</returns>
        ApiResponse<ServiceDocsPhonenumberSearchGetAll> V1PhonenumberSearchGetWithHttpInfo(string areaCode, int? quantity = default, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhoneNumberApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Assigned Numbers List
        /// </summary>
        /// <remarks>
        /// Access all phone numbers assigned to a CPaaS account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsAccountPhonenumberGetAll</returns>
        System.Threading.Tasks.Task<ServiceDocsAccountPhonenumberGetAll> V1AccountAccountidPhonenumberGetAsync(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Assigned Numbers List
        /// </summary>
        /// <remarks>
        /// Access all phone numbers assigned to a CPaaS account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsAccountPhonenumberGetAll)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsAccountPhonenumberGetAll>> V1AccountAccountidPhonenumberGetWithHttpInfoAsync(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Assign Number
        /// </summary>
        /// <remarks>
        /// Assign a purchased phone number to an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberAssignPostAsync(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Assign Number
        /// </summary>
        /// <remarks>
        /// Assign a purchased phone number to an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberAssignPostWithHttpInfoAsync(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Disconnect Number
        /// </summary>
        /// <remarks>
        /// Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberDisconnectPostAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Disconnect Number
        /// </summary>
        /// <remarks>
        /// Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberDisconnectPostWithHttpInfoAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Unassigned Numbers List
        /// </summary>
        /// <remarks>
        /// Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsAccountPhonenumberGetAll</returns>
        System.Threading.Tasks.Task<ServiceDocsAccountPhonenumberGetAll> V1AccountPhonenumberGetAsync(string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Unassigned Numbers List
        /// </summary>
        /// <remarks>
        /// Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsAccountPhonenumberGetAll)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsAccountPhonenumberGetAll>> V1AccountPhonenumberGetWithHttpInfoAsync(string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Purchase Number
        /// </summary>
        /// <remarks>
        /// Purchase or activate a phone number for CPaaS accounts within your business.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsOrderPhonenumber</returns>
        System.Threading.Tasks.Task<ServiceDocsOrderPhonenumber> V1AccountPhonenumberPostAsync(List<string> phonenumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Purchase Number
        /// </summary>
        /// <remarks>
        /// Purchase or activate a phone number for CPaaS accounts within your business.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsOrderPhonenumber)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsOrderPhonenumber>> V1AccountPhonenumberPostWithHttpInfoAsync(List<string> phonenumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Unassign Number
        /// </summary>
        /// <remarks>
        /// Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberUnassignPostAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Unassign Number
        /// </summary>
        /// <remarks>
        /// Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberUnassignPostWithHttpInfoAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Search New Numbers
        /// </summary>
        /// <remarks>
        /// Conduct a search for available phone numbers for purchase within an area code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsPhonenumberSearchGetAll</returns>
        System.Threading.Tasks.Task<ServiceDocsPhonenumberSearchGetAll> V1PhonenumberSearchGetAsync(string areaCode, int? quantity = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Search New Numbers
        /// </summary>
        /// <remarks>
        /// Conduct a search for available phone numbers for purchase within an area code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsPhonenumberSearchGetAll)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsPhonenumberSearchGetAll>> V1PhonenumberSearchGetWithHttpInfoAsync(string areaCode, int? quantity = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhoneNumberApi : IPhoneNumberApiSync, IPhoneNumberApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PhoneNumberApi : IPhoneNumberApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PhoneNumberApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PhoneNumberApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PhoneNumberApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhoneNumberApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PhoneNumberApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Assigned Numbers List Access all phone numbers assigned to a CPaaS account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsAccountPhonenumberGetAll</returns>
        public ServiceDocsAccountPhonenumberGetAll V1AccountAccountidPhonenumberGet(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> localVarResponse = V1AccountAccountidPhonenumberGetWithHttpInfo(accountid, startKey, pageSize);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Assigned Numbers List Access all phone numbers assigned to a CPaaS account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsAccountPhonenumberGetAll</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> V1AccountAccountidPhonenumberGetWithHttpInfo(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            // verify the required parameter 'accountid' is set
            if (accountid == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountid' when calling PhoneNumberApi->V1AccountAccountidPhonenumberGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountid", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountid)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountAccountidPhonenumberGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsAccountPhonenumberGetAll>("/v1/account/{accountid}/phonenumber", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountidPhonenumberGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Assigned Numbers List Access all phone numbers assigned to a CPaaS account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsAccountPhonenumberGetAll</returns>
        public async System.Threading.Tasks.Task<ServiceDocsAccountPhonenumberGetAll> V1AccountAccountidPhonenumberGetAsync(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> localVarResponse = await V1AccountAccountidPhonenumberGetWithHttpInfoAsync(accountid, startKey, pageSize, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Assigned Numbers List Access all phone numbers assigned to a CPaaS account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountid">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsAccountPhonenumberGetAll)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll>> V1AccountAccountidPhonenumberGetWithHttpInfoAsync(string accountid, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountid' is set
            if (accountid == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountid' when calling PhoneNumberApi->V1AccountAccountidPhonenumberGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountid", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountid)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountAccountidPhonenumberGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsAccountPhonenumberGetAll>("/v1/account/{accountid}/phonenumber", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountidPhonenumberGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Assign Number Assign a purchased phone number to an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        public ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberAssignPost(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = V1AccountPhonenumberAssignPostWithHttpInfo(payload);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Assign Number Assign a purchased phone number to an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberAssignPostWithHttpInfo(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberAssignPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberAssignPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/assign", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberAssignPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Assign Number Assign a purchased phone number to an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        public async System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberAssignPostAsync(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = await V1AccountPhonenumberAssignPostWithHttpInfoAsync(payload, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Assign Number Assign a purchased phone number to an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">assignment payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberAssignPostWithHttpInfoAsync(ServiceDocsPhonenumberAssignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberAssignPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberAssignPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/assign", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberAssignPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disconnect Number Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        public ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberDisconnectPost(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = V1AccountPhonenumberDisconnectPostWithHttpInfo(payload);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disconnect Number Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberDisconnectPostWithHttpInfo(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberDisconnectPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberDisconnectPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/disconnect", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberDisconnectPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Disconnect Number Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        public async System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberDisconnectPostAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = await V1AccountPhonenumberDisconnectPostWithHttpInfoAsync(payload, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Disconnect Number Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">disconnect payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberDisconnectPostWithHttpInfoAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberDisconnectPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberDisconnectPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/disconnect", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberDisconnectPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Unassigned Numbers List Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsAccountPhonenumberGetAll</returns>
        public ServiceDocsAccountPhonenumberGetAll V1AccountPhonenumberGet(string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> localVarResponse = V1AccountPhonenumberGetWithHttpInfo(startKey, pageSize);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Unassigned Numbers List Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsAccountPhonenumberGetAll</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> V1AccountPhonenumberGetWithHttpInfo(string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsAccountPhonenumberGetAll>("/v1/account/phonenumber", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Unassigned Numbers List Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsAccountPhonenumberGetAll</returns>
        public async System.Threading.Tasks.Task<ServiceDocsAccountPhonenumberGetAll> V1AccountPhonenumberGetAsync(string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll> localVarResponse = await V1AccountPhonenumberGetWithHttpInfoAsync(startKey, pageSize, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Unassigned Numbers List Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startKey">Start key for pagination, obtained from previous responses (optional)</param>
        /// <param name="pageSize">Number of records to return per page (range: 1 to 50) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsAccountPhonenumberGetAll)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsAccountPhonenumberGetAll>> V1AccountPhonenumberGetWithHttpInfoAsync(string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsAccountPhonenumberGetAll>("/v1/account/phonenumber", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Purchase Number Purchase or activate a phone number for CPaaS accounts within your business.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsOrderPhonenumber</returns>
        public ServiceDocsOrderPhonenumber V1AccountPhonenumberPost(List<string> phonenumber, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsOrderPhonenumber> localVarResponse = V1AccountPhonenumberPostWithHttpInfo(phonenumber);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Purchase Number Purchase or activate a phone number for CPaaS accounts within your business.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsOrderPhonenumber</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsOrderPhonenumber> V1AccountPhonenumberPostWithHttpInfo(List<string> phonenumber, int operationIndex = 0)
        {
            // verify the required parameter 'phonenumber' is set
            if (phonenumber == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'phonenumber' when calling PhoneNumberApi->V1AccountPhonenumberPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = phonenumber;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceDocsOrderPhonenumber>("/v1/account/phonenumber", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Purchase Number Purchase or activate a phone number for CPaaS accounts within your business.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsOrderPhonenumber</returns>
        public async System.Threading.Tasks.Task<ServiceDocsOrderPhonenumber> V1AccountPhonenumberPostAsync(List<string> phonenumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsOrderPhonenumber> localVarResponse = await V1AccountPhonenumberPostWithHttpInfoAsync(phonenumber, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Purchase Number Purchase or activate a phone number for CPaaS accounts within your business.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="phonenumber">phonenumber fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsOrderPhonenumber)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsOrderPhonenumber>> V1AccountPhonenumberPostWithHttpInfoAsync(List<string> phonenumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'phonenumber' is set
            if (phonenumber == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'phonenumber' when calling PhoneNumberApi->V1AccountPhonenumberPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = phonenumber;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceDocsOrderPhonenumber>("/v1/account/phonenumber", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Unassign Number Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceAPIResponseStatusCodeOnly</returns>
        public ServiceAPIResponseStatusCodeOnly V1AccountPhonenumberUnassignPost(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = V1AccountPhonenumberUnassignPostWithHttpInfo(payload);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Unassign Number Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceAPIResponseStatusCodeOnly</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberUnassignPostWithHttpInfo(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberUnassignPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberUnassignPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/unassign", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberUnassignPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Unassign Number Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceAPIResponseStatusCodeOnly</returns>
        public async System.Threading.Tasks.Task<ServiceAPIResponseStatusCodeOnly> V1AccountPhonenumberUnassignPostAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly> localVarResponse = await V1AccountPhonenumberUnassignPostWithHttpInfoAsync(payload, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Unassign Number Remove a phone number from an account and place it back on the list of unassigned phone numbers.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="payload">unassign payload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceAPIResponseStatusCodeOnly)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceAPIResponseStatusCodeOnly>> V1AccountPhonenumberUnassignPostWithHttpInfoAsync(ServiceDocsPhonenumberUnassignPayload payload, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'payload' is set
            if (payload == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'payload' when calling PhoneNumberApi->V1AccountPhonenumberUnassignPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = payload;

            localVarRequestOptions.Operation = "PhoneNumberApi.V1AccountPhonenumberUnassignPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceAPIResponseStatusCodeOnly>("/v1/account/phonenumber/unassign", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountPhonenumberUnassignPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search New Numbers Conduct a search for available phone numbers for purchase within an area code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsPhonenumberSearchGetAll</returns>
        public ServiceDocsPhonenumberSearchGetAll V1PhonenumberSearchGet(string areaCode, int? quantity = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsPhonenumberSearchGetAll> localVarResponse = V1PhonenumberSearchGetWithHttpInfo(areaCode, quantity);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search New Numbers Conduct a search for available phone numbers for purchase within an area code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsPhonenumberSearchGetAll</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsPhonenumberSearchGetAll> V1PhonenumberSearchGetWithHttpInfo(string areaCode, int? quantity = default, int operationIndex = 0)
        {
            // verify the required parameter 'areaCode' is set
            if (areaCode == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'areaCode' when calling PhoneNumberApi->V1PhonenumberSearchGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "area_code", areaCode));
            if (quantity != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "quantity", quantity));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1PhonenumberSearchGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsPhonenumberSearchGetAll>("/v1/phonenumber/search", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1PhonenumberSearchGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search New Numbers Conduct a search for available phone numbers for purchase within an area code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsPhonenumberSearchGetAll</returns>
        public async System.Threading.Tasks.Task<ServiceDocsPhonenumberSearchGetAll> V1PhonenumberSearchGetAsync(string areaCode, int? quantity = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsPhonenumberSearchGetAll> localVarResponse = await V1PhonenumberSearchGetWithHttpInfoAsync(areaCode, quantity, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search New Numbers Conduct a search for available phone numbers for purchase within an area code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="areaCode">Area code (exactly 3 numeric characters) example: 610 or 484</param>
        /// <param name="quantity">Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsPhonenumberSearchGetAll)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsPhonenumberSearchGetAll>> V1PhonenumberSearchGetWithHttpInfoAsync(string areaCode, int? quantity = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'areaCode' is set
            if (areaCode == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'areaCode' when calling PhoneNumberApi->V1PhonenumberSearchGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "area_code", areaCode));
            if (quantity != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "quantity", quantity));
            }

            localVarRequestOptions.Operation = "PhoneNumberApi.V1PhonenumberSearchGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsPhonenumberSearchGetAll>("/v1/phonenumber/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1PhonenumberSearchGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}

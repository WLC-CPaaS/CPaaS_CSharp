/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVoicemailApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Voicemail Box List
        /// </summary>
        /// <remarks>
        /// List all voicemail boxes in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetAll</returns>
        ServiceDocsVoicemailGetAll V1AccountAccountIDVoicemailGet(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0);

        /// <summary>
        /// Get Voicemail Box List
        /// </summary>
        /// <remarks>
        /// List all voicemail boxes in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetAll</returns>
        ApiResponse<ServiceDocsVoicemailGetAll> V1AccountAccountIDVoicemailGetWithHttpInfo(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0);
        /// <summary>
        /// Create Voicemail Box
        /// </summary>
        /// <remarks>
        /// Create a voicemail box for receiving and storing voicemail messages.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailPost(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0);

        /// <summary>
        /// Create Voicemail Box
        /// </summary>
        /// <remarks>
        /// Create a voicemail box for receiving and storing voicemail messages.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailPostWithHttpInfo(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0);
        /// <summary>
        /// Delete Voicemail Box
        /// </summary>
        /// <remarks>
        /// Delete a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDDelete(string accountID, string voicemailID, int operationIndex = 0);

        /// <summary>
        /// Delete Voicemail Box
        /// </summary>
        /// <remarks>
        /// Delete a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfo(string accountID, string voicemailID, int operationIndex = 0);
        /// <summary>
        /// Get Voicemail Box Details
        /// </summary>
        /// <remarks>
        /// Get information about a single voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDGet(string accountID, string voicemailID, int operationIndex = 0);

        /// <summary>
        /// Get Voicemail Box Details
        /// </summary>
        /// <remarks>
        /// Get information about a single voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfo(string accountID, string voicemailID, int operationIndex = 0);
        /// <summary>
        /// Get Voicemail Message List
        /// </summary>
        /// <remarks>
        /// Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetAll</returns>
        ServiceDocsVoicemailMessageGetAll V1AccountAccountIDVoicemailVoicemailIDMessageGet(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0);

        /// <summary>
        /// Get Voicemail Message List
        /// </summary>
        /// <remarks>
        /// Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetAll</returns>
        ApiResponse<ServiceDocsVoicemailMessageGetAll> V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfo(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0);
        /// <summary>
        /// Delete Voicemail Message
        /// </summary>
        /// <remarks>
        /// Delete a voicemail message from a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete(string accountID, string voicemailID, string messageID, int operationIndex = 0);

        /// <summary>
        /// Delete Voicemail Message
        /// </summary>
        /// <remarks>
        /// Delete a voicemail message from a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0);
        /// <summary>
        /// Get Voicemail Message Details
        /// </summary>
        /// <remarks>
        /// Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet(string accountID, string voicemailID, string messageID, int operationIndex = 0);

        /// <summary>
        /// Get Voicemail Message Details
        /// </summary>
        /// <remarks>
        /// Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0);
        /// <summary>
        /// Update Voicemail Message
        /// </summary>
        /// <remarks>
        /// Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0);

        /// <summary>
        /// Update Voicemail Message
        /// </summary>
        /// <remarks>
        /// Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfo(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0);
        /// <summary>
        /// Get Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>System.IO.Stream</returns>
        System.IO.Stream V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet(string accountID, string voicemailID, string messageID, int operationIndex = 0);

        /// <summary>
        /// Get Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        ApiResponse<System.IO.Stream> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0);
        /// <summary>
        /// Add Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Associate an audio recording file with the voicemail to fully complete the message.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, Object&gt;</returns>
        Dictionary<string, Object> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0);

        /// <summary>
        /// Add Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Associate an audio recording file with the voicemail to fully complete the message.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        ApiResponse<Dictionary<string, Object>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfo(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0);
        /// <summary>
        /// Create Voicemail Message
        /// </summary>
        /// <remarks>
        /// Create the container information for a recorded voicemail message in a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessagePost(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0);

        /// <summary>
        /// Create Voicemail Message
        /// </summary>
        /// <remarks>
        /// Create the container information for a recorded voicemail message in a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfo(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0);
        /// <summary>
        /// Update Voicemail Box
        /// </summary>
        /// <remarks>
        /// Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDPut(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0);

        /// <summary>
        /// Update Voicemail Box
        /// </summary>
        /// <remarks>
        /// Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfo(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVoicemailApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Voicemail Box List
        /// </summary>
        /// <remarks>
        /// List all voicemail boxes in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetAll</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailGetAll> V1AccountAccountIDVoicemailGetAsync(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Voicemail Box List
        /// </summary>
        /// <remarks>
        /// List all voicemail boxes in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetAll)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailGetAll>> V1AccountAccountIDVoicemailGetWithHttpInfoAsync(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Create Voicemail Box
        /// </summary>
        /// <remarks>
        /// Create a voicemail box for receiving and storing voicemail messages.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailPostAsync(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Create Voicemail Box
        /// </summary>
        /// <remarks>
        /// Create a voicemail box for receiving and storing voicemail messages.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailPostWithHttpInfoAsync(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Delete Voicemail Box
        /// </summary>
        /// <remarks>
        /// Delete a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDDeleteAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Delete Voicemail Box
        /// </summary>
        /// <remarks>
        /// Delete a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfoAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Voicemail Box Details
        /// </summary>
        /// <remarks>
        /// Get information about a single voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDGetAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Voicemail Box Details
        /// </summary>
        /// <remarks>
        /// Get information about a single voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfoAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Voicemail Message List
        /// </summary>
        /// <remarks>
        /// Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetAll</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetAll> V1AccountAccountIDVoicemailVoicemailIDMessageGetAsync(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Voicemail Message List
        /// </summary>
        /// <remarks>
        /// Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetAll)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailMessageGetAll>> V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfoAsync(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Delete Voicemail Message
        /// </summary>
        /// <remarks>
        /// Delete a voicemail message from a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Delete Voicemail Message
        /// </summary>
        /// <remarks>
        /// Delete a voicemail message from a voicemail box in an account.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Voicemail Message Details
        /// </summary>
        /// <remarks>
        /// Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Voicemail Message Details
        /// </summary>
        /// <remarks>
        /// Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Update Voicemail Message
        /// </summary>
        /// <remarks>
        /// Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutAsync(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Update Voicemail Message
        /// </summary>
        /// <remarks>
        /// Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfoAsync(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Get Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of System.IO.Stream</returns>
        System.Threading.Tasks.Task<System.IO.Stream> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Get Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        System.Threading.Tasks.Task<ApiResponse<System.IO.Stream>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Add Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Associate an audio recording file with the voicemail to fully complete the message.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        System.Threading.Tasks.Task<Dictionary<string, Object>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostAsync(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Add Voicemail Message File
        /// </summary>
        /// <remarks>
        /// Associate an audio recording file with the voicemail to fully complete the message.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Dictionary<string, Object>>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfoAsync(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Create Voicemail Message
        /// </summary>
        /// <remarks>
        /// Create the container information for a recorded voicemail message in a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessagePostAsync(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Create Voicemail Message
        /// </summary>
        /// <remarks>
        /// Create the container information for a recorded voicemail message in a voicemail box.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfoAsync(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// Update Voicemail Box
        /// </summary>
        /// <remarks>
        /// Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDPutAsync(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Update Voicemail Box
        /// </summary>
        /// <remarks>
        /// Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        System.Threading.Tasks.Task<ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfoAsync(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVoicemailApi : IVoicemailApiSync, IVoicemailApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class VoicemailApi : IVoicemailApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="VoicemailApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VoicemailApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VoicemailApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VoicemailApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VoicemailApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public VoicemailApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VoicemailApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public VoicemailApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Voicemail Box List List all voicemail boxes in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetAll</returns>
        public ServiceDocsVoicemailGetAll V1AccountAccountIDVoicemailGet(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetAll> localVarResponse = V1AccountAccountIDVoicemailGetWithHttpInfo(accountID, startKey, pageSize);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Box List List all voicemail boxes in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetAll</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetAll> V1AccountAccountIDVoicemailGetWithHttpInfo(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsVoicemailGetAll>("/v1/account/{accountID}/voicemail", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Box List List all voicemail boxes in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetAll</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailGetAll> V1AccountAccountIDVoicemailGetAsync(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetAll> localVarResponse = await V1AccountAccountIDVoicemailGetWithHttpInfoAsync(accountID, startKey, pageSize, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Box List List all voicemail boxes in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetAll)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetAll>> V1AccountAccountIDVoicemailGetWithHttpInfoAsync(string accountID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsVoicemailGetAll>("/v1/account/{accountID}/voicemail", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Voicemail Box Create a voicemail box for receiving and storing voicemail messages.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        public ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailPost(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = V1AccountAccountIDVoicemailPostWithHttpInfo(accountID, voicemail);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Voicemail Box Create a voicemail box for receiving and storing voicemail messages.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailPostWithHttpInfo(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailPost");
            }

            // verify the required parameter 'voicemail' is set
            if (voicemail == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemail' when calling VoicemailApi->V1AccountAccountIDVoicemailPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.Data = voicemail;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Voicemail Box Create a voicemail box for receiving and storing voicemail messages.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailPostAsync(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = await V1AccountAccountIDVoicemailPostWithHttpInfoAsync(accountID, voicemail, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Voicemail Box Create a voicemail box for receiving and storing voicemail messages.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemail">voicemail payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailPostWithHttpInfoAsync(string accountID, ServiceVOIPVoicemailAddEditData voicemail, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailPost");
            }

            // verify the required parameter 'voicemail' is set
            if (voicemail == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemail' when calling VoicemailApi->V1AccountAccountIDVoicemailPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.Data = voicemail;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete Voicemail Box Delete a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        public ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDDelete(string accountID, string voicemailID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfo(accountID, voicemailID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete Voicemail Box Delete a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfo(string accountID, string voicemailID, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDDelete");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete Voicemail Box Delete a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDDeleteAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfoAsync(accountID, voicemailID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete Voicemail Box Delete a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDDeleteWithHttpInfoAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDDelete");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Box Details Get information about a single voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        public ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDGet(string accountID, string voicemailID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfo(accountID, voicemailID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Box Details Get information about a single voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfo(string accountID, string voicemailID, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Box Details Get information about a single voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDGetAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfoAsync(accountID, voicemailID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Box Details Get information about a single voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDGetWithHttpInfoAsync(string accountID, string voicemailID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message List Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetAll</returns>
        public ServiceDocsVoicemailMessageGetAll V1AccountAccountIDVoicemailVoicemailIDMessageGet(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetAll> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfo(accountID, voicemailID, startKey, pageSize);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message List Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetAll</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetAll> V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfo(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsVoicemailMessageGetAll>("/v1/account/{accountID}/voicemail/{voicemailID}/message", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message List Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetAll</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetAll> V1AccountAccountIDVoicemailVoicemailIDMessageGetAsync(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetAll> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfoAsync(accountID, voicemailID, startKey, pageSize, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message List Get a list of voicemail messages from an account&#39;s voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alpha numeric</param>
        /// <param name="startKey">start_key for pagination that was returned as next_start_key from your previous call (optional)</param>
        /// <param name="pageSize">number of records to return, range 1 to 50 (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetAll)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetAll>> V1AccountAccountIDVoicemailVoicemailIDMessageGetWithHttpInfoAsync(string accountID, string voicemailID, string? startKey = default, int? pageSize = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            if (startKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "start_key", startKey));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsVoicemailMessageGetAll>("/v1/account/{accountID}/voicemail/{voicemailID}/message", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete Voicemail Message Delete a voicemail message from a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        public ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfo(accountID, voicemailID, messageID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete Voicemail Message Delete a voicemail message from a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete Voicemail Message Delete a voicemail message from a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfoAsync(accountID, voicemailID, messageID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete Voicemail Message Delete a voicemail message from a voicemail box in an account.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">message ID, 32 alpha numeric</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message Details Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        public ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfo(accountID, voicemailID, messageID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message Details Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message Details Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfoAsync(accountID, voicemailID, messageID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message Details Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Voicemail Message Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        public ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfo(accountID, voicemailID, messageID, reqBody);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Voicemail Message Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfo(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'reqBody' is set
            if (reqBody == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'reqBody' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter
            localVarRequestOptions.Data = reqBody;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Voicemail Message Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutAsync(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfoAsync(accountID, voicemailID, messageID, reqBody, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Voicemail Message Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="messageID">Message ID, 39 (yyyymm-&lt;32 id&gt;)</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutWithHttpInfoAsync(string accountID, string voicemailID, string messageID, ServiceVOIPVoicemailMessageChange reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }

            // verify the required parameter 'reqBody' is set
            if (reqBody == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'reqBody' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter
            localVarRequestOptions.Data = reqBody;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message File Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>System.IO.Stream</returns>
        public System.IO.Stream V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<System.IO.Stream> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfo(accountID, voicemailID, messageID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message File Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of System.IO.Stream</returns>
        public Org.OpenAPITools.Client.ApiResponse<System.IO.Stream> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfo(string accountID, string voicemailID, string messageID, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/octet-stream"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<System.IO.Stream>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Voicemail Message File Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of System.IO.Stream</returns>
        public async System.Threading.Tasks.Task<System.IO.Stream> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<System.IO.Stream> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfoAsync(accountID, voicemailID, messageID, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Voicemail Message File Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, unique 32-character alphanumeric identifier</param>
        /// <param name="voicemailID">Voicemail Box ID, unique 32-character alphanumeric identifier</param>
        /// <param name="messageID">Message ID, unique 32-character alphanumeric identifier</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (System.IO.Stream)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<System.IO.Stream>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetWithHttpInfoAsync(string accountID, string voicemailID, string messageID, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/octet-stream"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<System.IO.Stream>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add Voicemail Message File Associate an audio recording file with the voicemail to fully complete the message.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Dictionary&lt;string, Object&gt;</returns>
        public Dictionary<string, Object> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Dictionary<string, Object>> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfo(accountID, voicemailID, messageID, file);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add Voicemail Message File Associate an audio recording file with the voicemail to fully complete the message.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Dictionary&lt;string, Object&gt;</returns>
        public Org.OpenAPITools.Client.ApiResponse<Dictionary<string, Object>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfo(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'file' is set
            if (file == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'file' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter
            localVarRequestOptions.FileParameters.Add("file", file);

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Dictionary<string, Object>>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add Voicemail Message File Associate an audio recording file with the voicemail to fully complete the message.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Dictionary&lt;string, Object&gt;</returns>
        public async System.Threading.Tasks.Task<Dictionary<string, Object>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostAsync(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<Dictionary<string, Object>> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfoAsync(accountID, voicemailID, messageID, file, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add Voicemail Message File Associate an audio recording file with the voicemail to fully complete the message.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alphanumeric characters</param>
        /// <param name="voicemailID">Voicemail ID, 32 alphanumeric characters</param>
        /// <param name="messageID">Message ID, 32 alphanumeric characters</param>
        /// <param name="file">Audio file to upload</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Object&gt;)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Dictionary<string, Object>>> V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostWithHttpInfoAsync(string accountID, string voicemailID, string messageID, System.IO.Stream file, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'messageID' is set
            if (messageID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'messageID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }

            // verify the required parameter 'file' is set
            if (file == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'file' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.PathParameters.Add("messageID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(messageID)); // path parameter
            localVarRequestOptions.FileParameters.Add("file", file);

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Dictionary<string, Object>>("/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Voicemail Message Create the container information for a recorded voicemail message in a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailMessageGetSingle</returns>
        public ServiceDocsVoicemailMessageGetSingle V1AccountAccountIDVoicemailVoicemailIDMessagePost(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfo(accountID, voicemailID, message);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Voicemail Message Create the container information for a recorded voicemail message in a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailMessageGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfo(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }

            // verify the required parameter 'message' is set
            if (message == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'message' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.Data = message;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessagePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessagePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create Voicemail Message Create the container information for a recorded voicemail message in a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailMessageGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailMessageGetSingle> V1AccountAccountIDVoicemailVoicemailIDMessagePostAsync(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfoAsync(accountID, voicemailID, message, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create Voicemail Message Create the container information for a recorded voicemail message in a voicemail box.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">account ID, 32 alphanumeric</param>
        /// <param name="voicemailID">voicemail ID, 32 alphanumeric</param>
        /// <param name="message">voicemail message payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailMessageGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailMessageGetSingle>> V1AccountAccountIDVoicemailVoicemailIDMessagePostWithHttpInfoAsync(string accountID, string voicemailID, ServiceVOIPVoicemailMessageAddData message, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }

            // verify the required parameter 'message' is set
            if (message == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'message' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDMessagePost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.Data = message;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDMessagePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ServiceDocsVoicemailMessageGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}/message", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDMessagePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Voicemail Box Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ServiceDocsVoicemailGetSingle</returns>
        public ServiceDocsVoicemailGetSingle V1AccountAccountIDVoicemailVoicemailIDPut(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfo(accountID, voicemailID, reqBody);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Voicemail Box Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ServiceDocsVoicemailGetSingle</returns>
        public Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfo(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }

            // verify the required parameter 'reqBody' is set
            if (reqBody == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'reqBody' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.Data = reqBody;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update Voicemail Box Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ServiceDocsVoicemailGetSingle</returns>
        public async System.Threading.Tasks.Task<ServiceDocsVoicemailGetSingle> V1AccountAccountIDVoicemailVoicemailIDPutAsync(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle> localVarResponse = await V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfoAsync(accountID, voicemailID, reqBody, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update Voicemail Box Update the settings in an individual voicemail box, such as the owner, PIN, etc.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="accountID">Account ID, 32 alpha numeric</param>
        /// <param name="voicemailID">Voicemail ID, 32 alpha numeric</param>
        /// <param name="reqBody">payload fields</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ServiceDocsVoicemailGetSingle)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ServiceDocsVoicemailGetSingle>> V1AccountAccountIDVoicemailVoicemailIDPutWithHttpInfoAsync(string accountID, string voicemailID, ServiceVOIPVoicemailAddEditData reqBody, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'accountID' is set
            if (accountID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'accountID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }

            // verify the required parameter 'voicemailID' is set
            if (voicemailID == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'voicemailID' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }

            // verify the required parameter 'reqBody' is set
            if (reqBody == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'reqBody' when calling VoicemailApi->V1AccountAccountIDVoicemailVoicemailIDPut");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("accountID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(accountID)); // path parameter
            localVarRequestOptions.PathParameters.Add("voicemailID", Org.OpenAPITools.Client.ClientUtils.ParameterToString(voicemailID)); // path parameter
            localVarRequestOptions.Data = reqBody;

            localVarRequestOptions.Operation = "VoicemailApi.V1AccountAccountIDVoicemailVoicemailIDPut";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BearerAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<ServiceDocsVoicemailGetSingle>("/v1/account/{accountID}/voicemail/{voicemailID}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("V1AccountAccountIDVoicemailVoicemailIDPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}

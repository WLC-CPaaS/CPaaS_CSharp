/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing MediaApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MediaApiTests : IDisposable
    {
        private MediaApi instance;

        public MediaApiTests()
        {
            instance = new MediaApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MediaApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MediaApi
            //Assert.IsType<MediaApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDMediaMediaIDFileGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDMediaMediaIDFileGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string mediaID = null;
            //var response = instance.V1AccountAccountIDMediaMediaIDFileGet(accountID, mediaID);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDMediaMediaIDFilePost
        /// </summary>
        [Fact]
        public void V1AccountAccountIDMediaMediaIDFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string mediaID = null;
            //System.IO.Stream file = null;
            //var response = instance.V1AccountAccountIDMediaMediaIDFilePost(accountID, mediaID, file);
            //Assert.IsType<ServiceDocsMediaGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidMediaGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidMediaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string? startKey = null;
            //int? pageSize = null;
            //var response = instance.V1AccountAccountidMediaGet(accountid, startKey, pageSize);
            //Assert.IsType<ServiceDocsMediaGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidMediaMediaidDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountidMediaMediaidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string mediaid = null;
            //var response = instance.V1AccountAccountidMediaMediaidDelete(accountid, mediaid);
            //Assert.IsType<ServiceDocsMediaGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidMediaMediaidGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidMediaMediaidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string mediaid = null;
            //var response = instance.V1AccountAccountidMediaMediaidGet(accountid, mediaid);
            //Assert.IsType<ServiceDocsMediaGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidMediaPost
        /// </summary>
        [Fact]
        public void V1AccountAccountidMediaPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //ServiceVOIPMediaAddEditData media = null;
            //var response = instance.V1AccountAccountidMediaPost(accountid, media);
            //Assert.IsType<ServiceDocsMediaGetSingle>(response);
        }
    }
}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DataApiTests : IDisposable
    {
        private DataApi instance;

        public DataApiTests()
        {
            instance = new DataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DataApi
            //Assert.IsType<DataApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDCdrCdrIDGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCdrCdrIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string cdrID = null;
            //var response = instance.V1AccountAccountIDCdrCdrIDGet(accountID, cdrID);
            //Assert.IsType<ServiceDocsCdrGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCdrGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCdrGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string? pageSize = null;
            //string? startKey = null;
            //string? createdFrom = null;
            //string? createdTo = null;
            //var response = instance.V1AccountAccountIDCdrGet(accountID, pageSize, startKey, createdFrom, createdTo);
            //Assert.IsType<ServiceDocsCdrGetAll>(response);
        }

        /// <summary>
        /// Test V1DataCallDailySummaryGet
        /// </summary>
        [Fact]
        public void V1DataCallDailySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? accountId = null;
            //string? callType = null;
            //string? endDate = null;
            //int? pageSize = null;
            //string? startDate = null;
            //string? startKey = null;
            //var response = instance.V1DataCallDailySummaryGet(accountId, callType, endDate, pageSize, startDate, startKey);
            //Assert.IsType<ServiceDocsCallDailySummary>(response);
        }

        /// <summary>
        /// Test V1DataCallDetailGet
        /// </summary>
        [Fact]
        public void V1DataCallDetailGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? account = null;
            //string? callType = null;
            //string? calleeName = null;
            //string? calleeNumber = null;
            //string? callerName = null;
            //string? callerNumber = null;
            //string? endDate = null;
            //int? pageSize = null;
            //string? startDate = null;
            //string? startKey = null;
            //var response = instance.V1DataCallDetailGet(account, callType, calleeName, calleeNumber, callerName, callerNumber, endDate, pageSize, startDate, startKey);
            //Assert.IsType<ServiceDocsCallDetail>(response);
        }

        /// <summary>
        /// Test V1DataCallMonthlySummaryGet
        /// </summary>
        [Fact]
        public void V1DataCallMonthlySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? account = null;
            //string? callType = null;
            //int? endMonth = null;
            //int? endYear = null;
            //int? pageSize = null;
            //string? startKey = null;
            //int? startMonth = null;
            //int? startYear = null;
            //var response = instance.V1DataCallMonthlySummaryGet(account, callType, endMonth, endYear, pageSize, startKey, startMonth, startYear);
            //Assert.IsType<ServiceDocsCallMonthlySummary>(response);
        }

        /// <summary>
        /// Test V1DataEndpointListGet
        /// </summary>
        [Fact]
        public void V1DataEndpointListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? endpointName = null;
            //string? featureName = null;
            //int? pageSize = null;
            //string? startKey = null;
            //string? transactionType = null;
            //string? version = null;
            //var response = instance.V1DataEndpointListGet(endpointName, featureName, pageSize, startKey, transactionType, version);
            //Assert.IsType<ServiceDocsEndpointList>(response);
        }

        /// <summary>
        /// Test V1DataEventDailySummaryGet
        /// </summary>
        [Fact]
        public void V1DataEventDailySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? accountId = null;
            //string? component = null;
            //string? endDate = null;
            //int? pageSize = null;
            //string? startDate = null;
            //string? startKey = null;
            //var response = instance.V1DataEventDailySummaryGet(accountId, component, endDate, pageSize, startDate, startKey);
            //Assert.IsType<ServiceDocsEventDailySummary>(response);
        }

        /// <summary>
        /// Test V1DataEventDetailGet
        /// </summary>
        [Fact]
        public void V1DataEventDetailGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? accountId = null;
            //string? component = null;
            //string? endDateTime = null;
            //string? eventName = null;
            //string? execStatus = null;
            //int? pageSize = null;
            //string? startDateTime = null;
            //string? startKey = null;
            //string? username = null;
            //var response = instance.V1DataEventDetailGet(accountId, component, endDateTime, eventName, execStatus, pageSize, startDateTime, startKey, username);
            //Assert.IsType<ServiceDocsEventDetail>(response);
        }

        /// <summary>
        /// Test V1DataEventMonthlySummaryGet
        /// </summary>
        [Fact]
        public void V1DataEventMonthlySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? accountId = null;
            //string? component = null;
            //int? endMonth = null;
            //int? endYear = null;
            //int? pageSize = null;
            //string? startKey = null;
            //int? startMonth = null;
            //int? startYear = null;
            //var response = instance.V1DataEventMonthlySummaryGet(accountId, component, endMonth, endYear, pageSize, startKey, startMonth, startYear);
            //Assert.IsType<ServiceDocsEventMonthlySummary>(response);
        }

        /// <summary>
        /// Test V1DataFeatureDailySummaryGet
        /// </summary>
        [Fact]
        public void V1DataFeatureDailySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? endDate = null;
            //string? featureName = null;
            //int? pageSize = null;
            //string? startDate = null;
            //string? startKey = null;
            //var response = instance.V1DataFeatureDailySummaryGet(endDate, featureName, pageSize, startDate, startKey);
            //Assert.IsType<ServiceDocsFeatureDailySummary>(response);
        }

        /// <summary>
        /// Test V1DataFeatureMonthlySummaryGet
        /// </summary>
        [Fact]
        public void V1DataFeatureMonthlySummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? endMonth = null;
            //int? endYear = null;
            //string? featureName = null;
            //int? pageSize = null;
            //string? startKey = null;
            //int? startMonth = null;
            //int? startYear = null;
            //var response = instance.V1DataFeatureMonthlySummaryGet(endMonth, endYear, featureName, pageSize, startKey, startMonth, startYear);
            //Assert.IsType<ServiceDocsFeatureMonthlySummary>(response);
        }
    }
}

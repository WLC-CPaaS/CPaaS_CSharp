/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DeviceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeviceApiTests : IDisposable
    {
        private DeviceApi instance;

        public DeviceApiTests()
        {
            instance = new DeviceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeviceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DeviceApi
            //Assert.IsType<DeviceApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceDeviceidDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceDeviceidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string deviceid = null;
            //var response = instance.V1AccountAccountidDeviceDeviceidDelete(accountid, deviceid);
            //Assert.IsType<ServiceDocsDeviceGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceDeviceidGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceDeviceidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string deviceid = null;
            //var response = instance.V1AccountAccountidDeviceDeviceidGet(accountid, deviceid);
            //Assert.IsType<ServiceDocsDeviceGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceDeviceidPut
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceDeviceidPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string deviceid = null;
            //ServiceVOIPDeviceAddEdit2 device = null;
            //var response = instance.V1AccountAccountidDeviceDeviceidPut(accountid, deviceid, device);
            //Assert.IsType<ServiceDocsDeviceGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceDeviceidRebootPost
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceDeviceidRebootPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string deviceid = null;
            //var response = instance.V1AccountAccountidDeviceDeviceidRebootPost(accountid, deviceid);
            //Assert.IsType<ServiceDocsDeviceReboot>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string? startKey = null;
            //int? pageSize = null;
            //var response = instance.V1AccountAccountidDeviceGet(accountid, startKey, pageSize);
            //Assert.IsType<ServiceDocsDeviceGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDevicePost
        /// </summary>
        [Fact]
        public void V1AccountAccountidDevicePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //ServiceVOIPDeviceAddEdit2 device = null;
            //var response = instance.V1AccountAccountidDevicePost(accountid, device);
            //Assert.IsType<ServiceDocsDeviceGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidDeviceStatusGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidDeviceStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //var response = instance.V1AccountAccountidDeviceStatusGet(accountid);
            //Assert.IsType<ServiceDocsDeviceStatus>(response);
        }
    }
}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CallRecordingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallRecordingApiTests : IDisposable
    {
        private CallRecordingApi instance;

        public CallRecordingApiTests()
        {
            instance = new CallRecordingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CallRecordingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CallRecordingApi
            //Assert.IsType<CallRecordingApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDRecordingGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDRecordingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //var response = instance.V1AccountAccountIDRecordingGet(accountID);
            //Assert.IsType<ServiceDocsCallRecordingGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDRecordingRecordingIDDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountIDRecordingRecordingIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string recordingID = null;
            //var response = instance.V1AccountAccountIDRecordingRecordingIDDelete(accountID, recordingID);
            //Assert.IsType<ServiceDocsCallRecordingGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDRecordingRecordingIDGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDRecordingRecordingIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string recordingID = null;
            //var response = instance.V1AccountAccountIDRecordingRecordingIDGet(accountID, recordingID);
            //Assert.IsType<ServiceDocsCallRecordingGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDUserUserIDRecordingGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDUserUserIDRecordingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string userID = null;
            //var response = instance.V1AccountAccountIDUserUserIDRecordingGet(accountID, userID);
            //Assert.IsType<ServiceDocsCallRecordingGetAll>(response);
        }
    }
}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing E911Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class E911ApiTests : IDisposable
    {
        private E911Api instance;

        public E911ApiTests()
        {
            instance = new E911Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of E911Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' E911Api
            //Assert.IsType<E911Api>(instance);
        }

        /// <summary>
        /// Test V1E911Get
        /// </summary>
        [Fact]
        public void V1E911GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.V1E911Get();
            //Assert.IsType<ServiceDocsE911URIsApiOutput>(response);
        }

        /// <summary>
        /// Test V1E911LocationLocationIDActivatePut
        /// </summary>
        [Fact]
        public void V1E911LocationLocationIDActivatePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locationID = null;
            //var response = instance.V1E911LocationLocationIDActivatePut(locationID);
            //Assert.IsType<ServiceDocsE911ActiveLocationOutput>(response);
        }

        /// <summary>
        /// Test V1E911LocationLocationIDDelete
        /// </summary>
        [Fact]
        public void V1E911LocationLocationIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locationID = null;
            //var response = instance.V1E911LocationLocationIDDelete(locationID);
            //Assert.IsType<ServiceDocsE911RemoveLocationOutput>(response);
        }

        /// <summary>
        /// Test V1E911LocationValidatePut
        /// </summary>
        [Fact]
        public void V1E911LocationValidatePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ServiceE911ValidateLocationInput reqBody = null;
            //var response = instance.V1E911LocationValidatePut(reqBody);
            //Assert.IsType<ServiceDocsE911ValidateLocationOutput>(response);
        }

        /// <summary>
        /// Test V1E911PhoneNumberDelete
        /// </summary>
        [Fact]
        public void V1E911PhoneNumberDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string phoneNumber = null;
            //var response = instance.V1E911PhoneNumberDelete(phoneNumber);
            //Assert.IsType<ServiceDocsE911RemoveURIApiOutput>(response);
        }

        /// <summary>
        /// Test V1E911PhoneNumberLocationActiveGet
        /// </summary>
        [Fact]
        public void V1E911PhoneNumberLocationActiveGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string phoneNumber = null;
            //var response = instance.V1E911PhoneNumberLocationActiveGet(phoneNumber);
            //Assert.IsType<ServiceDocsE911ActiveLocationURIApiOutput>(response);
        }

        /// <summary>
        /// Test V1E911PhoneNumberLocationGet
        /// </summary>
        [Fact]
        public void V1E911PhoneNumberLocationGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string phoneNumber = null;
            //var response = instance.V1E911PhoneNumberLocationGet(phoneNumber);
            //Assert.IsType<ServiceDocsE911LocationsURIApiOutput>(response);
        }

        /// <summary>
        /// Test V1E911Post
        /// </summary>
        [Fact]
        public void V1E911PostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ServiceE911AddLocationInput reqBody = null;
            //var response = instance.V1E911Post(reqBody);
            //Assert.IsType<ServiceDocsE911AddLocationOutput>(response);
        }
    }
}

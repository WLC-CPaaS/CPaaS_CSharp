/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TemporalRuleApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TemporalRuleApiTests : IDisposable
    {
        private TemporalRuleApi instance;

        public TemporalRuleApiTests()
        {
            instance = new TemporalRuleApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemporalRuleApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TemporalRuleApi
            //Assert.IsType<TemporalRuleApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDTemporalruleGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDTemporalruleGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string? startKey = null;
            //int? pageSize = null;
            //var response = instance.V1AccountAccountIDTemporalruleGet(accountID, startKey, pageSize);
            //Assert.IsType<ServiceDocsTemporalRuleGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDTemporalrulePost
        /// </summary>
        [Fact]
        public void V1AccountAccountIDTemporalrulePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //ServiceVOIPTemporalRuleAddEdit2 temporalrule = null;
            //var response = instance.V1AccountAccountIDTemporalrulePost(accountID, temporalrule);
            //Assert.IsType<ServiceDocsTemporalRuleGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDTemporalruleTemporalRuleIDDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountIDTemporalruleTemporalRuleIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string temporalRuleID = null;
            //var response = instance.V1AccountAccountIDTemporalruleTemporalRuleIDDelete(accountID, temporalRuleID);
            //Assert.IsType<ServiceDocsTemporalRuleGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDTemporalruleTemporalRuleIDGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDTemporalruleTemporalRuleIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string temporalRuleID = null;
            //var response = instance.V1AccountAccountIDTemporalruleTemporalRuleIDGet(accountID, temporalRuleID);
            //Assert.IsType<ServiceDocsTemporalRuleGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDTemporalruleTemporalRuleIDPut
        /// </summary>
        [Fact]
        public void V1AccountAccountIDTemporalruleTemporalRuleIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string temporalRuleID = null;
            //ServiceVOIPTemporalRuleAddEdit2 reqBody = null;
            //var response = instance.V1AccountAccountIDTemporalruleTemporalRuleIDPut(accountID, temporalRuleID, reqBody);
            //Assert.IsType<ServiceDocsTemporalRuleGetSingle>(response);
        }
    }
}

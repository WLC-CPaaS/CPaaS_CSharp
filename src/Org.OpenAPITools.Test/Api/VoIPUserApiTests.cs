/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing VoIPUserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VoIPUserApiTests : IDisposable
    {
        private VoIPUserApi instance;

        public VoIPUserApiTests()
        {
            instance = new VoIPUserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VoIPUserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' VoIPUserApi
            //Assert.IsType<VoIPUserApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountidUserGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string? startKey = null;
            //int? pageSize = null;
            //var response = instance.V1AccountAccountidUserGet(accountid, startKey, pageSize);
            //Assert.IsType<ServiceDocsUserGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidUserPost
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //ServiceVOIPUserAdd2 user = null;
            //var response = instance.V1AccountAccountidUserPost(accountid, user);
            //Assert.IsType<ServiceDocsUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidUserUseridDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserUseridDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string userid = null;
            //var response = instance.V1AccountAccountidUserUseridDelete(accountid, userid);
            //Assert.IsType<ServiceDocsUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidUserUseridGet
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserUseridGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string userid = null;
            //var response = instance.V1AccountAccountidUserUseridGet(accountid, userid);
            //Assert.IsType<ServiceDocsUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidUserUseridPut
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserUseridPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string userid = null;
            //ServiceVOIPUserAdd2 user = null;
            //var response = instance.V1AccountAccountidUserUseridPut(accountid, userid, user);
            //Assert.IsType<ServiceDocsUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountidUserUseridUserauthPost
        /// </summary>
        [Fact]
        public void V1AccountAccountidUserUseridUserauthPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountid = null;
            //string userid = null;
            //ServiceVOIPImpersonateUser user = null;
            //var response = instance.V1AccountAccountidUserUseridUserauthPost(accountid, userid, user);
            //Assert.IsType<ServiceDocsImpersonateUserGetSingle>(response);
        }
    }
}

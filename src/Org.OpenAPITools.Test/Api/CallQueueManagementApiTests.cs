/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CallQueueManagementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CallQueueManagementApiTests : IDisposable
    {
        private CallQueueManagementApi instance;

        public CallQueueManagementApiTests()
        {
            instance = new CallQueueManagementApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CallQueueManagementApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CallQueueManagementApi
            //Assert.IsType<CallQueueManagementApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueueGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueueGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //var response = instance.V1AccountAccountIDCallqueueGet(accountID);
            //Assert.IsType<ServiceDocsCallQueueGetAll>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueuePost
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueuePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //ServiceVOIPCallQueueAddEditData reqBody = null;
            //var response = instance.V1AccountAccountIDCallqueuePost(accountID, reqBody);
            //Assert.IsType<ServiceDocsCallQueueGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueueQueueIDDelete
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueueQueueIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string queueID = null;
            //var response = instance.V1AccountAccountIDCallqueueQueueIDDelete(accountID, queueID);
            //Assert.IsType<ServiceDocsCallQueueGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueueQueueIDGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueueQueueIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string queueID = null;
            //var response = instance.V1AccountAccountIDCallqueueQueueIDGet(accountID, queueID);
            //Assert.IsType<ServiceDocsCallQueueGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueueQueueIDPut
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueueQueueIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string queueID = null;
            //ServiceVOIPCallQueueAddEditData reqBody = null;
            //var response = instance.V1AccountAccountIDCallqueueQueueIDPut(accountID, queueID, reqBody);
            //Assert.IsType<ServiceDocsCallQueueGetSingle>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDCallqueueQueueIDStatusGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDCallqueueQueueIDStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string queueID = null;
            //var response = instance.V1AccountAccountIDCallqueueQueueIDStatusGet(accountID, queueID);
            //Assert.IsType<ServiceDocsCallQueueGetSingleStatus>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDQueuerolesGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDQueuerolesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //var response = instance.V1AccountAccountIDQueuerolesGet(accountID);
            //Assert.IsType<ServiceDocsCallQueueGetRoles>(response);
        }

        /// <summary>
        /// Test V1AccountAccountIDQueuerolesQueueIDPost
        /// </summary>
        [Fact]
        public void V1AccountAccountIDQueuerolesQueueIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string queueID = null;
            //ServiceVOIPCallQueueRoleAssignData reqBody = null;
            //var response = instance.V1AccountAccountIDQueuerolesQueueIDPost(accountID, queueID, reqBody);
            //Assert.IsType<ServiceAPIResponse>(response);
        }
    }
}

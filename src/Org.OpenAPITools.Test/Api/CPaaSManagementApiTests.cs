/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CPaaSManagementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CPaaSManagementApiTests : IDisposable
    {
        private CPaaSManagementApi instance;

        public CPaaSManagementApiTests()
        {
            instance = new CPaaSManagementApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CPaaSManagementApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CPaaSManagementApi
            //Assert.IsType<CPaaSManagementApi>(instance);
        }

        /// <summary>
        /// Test V1MgmtUserGet
        /// </summary>
        [Fact]
        public void V1MgmtUserGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageSize = null;
            //string? startKey = null;
            //string? sort = null;
            //string? email = null;
            //string? role = null;
            //string? firstName = null;
            //string? lastName = null;
            //var response = instance.V1MgmtUserGet(pageSize, startKey, sort, email, role, firstName, lastName);
            //Assert.IsType<ServiceDocsAdminUserGetAll>(response);
        }

        /// <summary>
        /// Test V1MgmtUserPost
        /// </summary>
        [Fact]
        public void V1MgmtUserPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ServiceAdminUserAddData reqBody = null;
            //var response = instance.V1MgmtUserPost(reqBody);
            //Assert.IsType<ServiceDocsAdminUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1MgmtUserUserIDDelete
        /// </summary>
        [Fact]
        public void V1MgmtUserUserIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userID = null;
            //var response = instance.V1MgmtUserUserIDDelete(userID);
            //Assert.IsType<ServiceDocsAdminUserDelete>(response);
        }

        /// <summary>
        /// Test V1MgmtUserUserIDGet
        /// </summary>
        [Fact]
        public void V1MgmtUserUserIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userID = null;
            //var response = instance.V1MgmtUserUserIDGet(userID);
            //Assert.IsType<ServiceDocsAdminUserGetSingle>(response);
        }

        /// <summary>
        /// Test V1MgmtUserUserIDPut
        /// </summary>
        [Fact]
        public void V1MgmtUserUserIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userID = null;
            //ServiceAdminUserEditData reqBody = null;
            //var response = instance.V1MgmtUserUserIDPut(userID, reqBody);
            //Assert.IsType<ServiceDocsAdminUserGetSingle>(response);
        }
    }
}

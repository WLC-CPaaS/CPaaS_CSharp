/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ProvisioningApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProvisioningApiTests : IDisposable
    {
        private ProvisioningApi instance;

        public ProvisioningApiTests()
        {
            instance = new ProvisioningApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProvisioningApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProvisioningApi
            //Assert.IsType<ProvisioningApi>(instance);
        }

        /// <summary>
        /// Test V1AccountAccountIDProvisionFilenameGet
        /// </summary>
        [Fact]
        public void V1AccountAccountIDProvisionFilenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountID = null;
            //string filename = null;
            //var response = instance.V1AccountAccountIDProvisionFilenameGet(accountID, filename);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyFamilyGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyFamilyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string family = null;
            //var response = instance.V1ApBrandBrandFamilyFamilyGet(brand, family);
            //Assert.IsType<ProvisioningDocsDocsFamilyOutputSingle>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyFamilyModelGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyFamilyModelGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string family = null;
            //string? modelName = null;
            //int? pageSize = null;
            //string? startKey = null;
            //string? status = null;
            //var response = instance.V1ApBrandBrandFamilyFamilyModelGet(brand, family, modelName, pageSize, startKey, status);
            //Assert.IsType<ProvisioningDocsDocsModelOutput>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyFamilyModelModelGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyFamilyModelModelGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string family = null;
            //string model = null;
            //var response = instance.V1ApBrandBrandFamilyFamilyModelModelGet(brand, family, model);
            //Assert.IsType<ProvisioningDocsDocsModelOutputSingle>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyFamilyModelModelTemplateGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyFamilyModelModelTemplateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string family = null;
            //string model = null;
            //string? firmware = null;
            //int? pageSize = null;
            //string? startKey = null;
            //string? status = null;
            //string? templateName = null;
            //var response = instance.V1ApBrandBrandFamilyFamilyModelModelTemplateGet(brand, family, model, firmware, pageSize, startKey, status, templateName);
            //Assert.IsType<ProvisioningDocsDocsTemplatesOutput>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string family = null;
            //string model = null;
            //string template = null;
            //var response = instance.V1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet(brand, family, model, template);
            //Assert.IsType<ProvisioningDocsDocsTemplateOutputSingle>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandFamilyGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandFamilyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //string? familyName = null;
            //int? pageSize = null;
            //string? startKey = null;
            //string? status = null;
            //var response = instance.V1ApBrandBrandFamilyGet(brand, familyName, pageSize, startKey, status);
            //Assert.IsType<ProvisioningDocsDocsFamilyOutput>(response);
        }

        /// <summary>
        /// Test V1ApBrandBrandGet
        /// </summary>
        [Fact]
        public void V1ApBrandBrandGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string brand = null;
            //var response = instance.V1ApBrandBrandGet(brand);
            //Assert.IsType<ProvisioningDocsDocsBrandOutputSingle>(response);
        }

        /// <summary>
        /// Test V1ApBrandGet
        /// </summary>
        [Fact]
        public void V1ApBrandGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? brandName = null;
            //int? pageSize = null;
            //string? startKey = null;
            //string? status = null;
            //var response = instance.V1ApBrandGet(brandName, pageSize, startKey, status);
            //Assert.IsType<ProvisioningDocsDocsBrandsOutput>(response);
        }

        /// <summary>
        /// Test V1ApConfigfileGeneratePost
        /// </summary>
        [Fact]
        public void V1ApConfigfileGeneratePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModelsGenerateConfigFileRequest varParams = null;
            //var response = instance.V1ApConfigfileGeneratePost(varParams);
            //Assert.IsType<ProvisioningDocsDocsConfigFileOutput>(response);
        }
    }
}

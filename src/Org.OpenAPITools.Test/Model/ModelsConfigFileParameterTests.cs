/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ModelsConfigFileParameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModelsConfigFileParameterTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModelsConfigFileParameter
        //private ModelsConfigFileParameter instance;

        public ModelsConfigFileParameterTests()
        {
            // TODO uncomment below to create an instance of ModelsConfigFileParameter
            //instance = new ModelsConfigFileParameter();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModelsConfigFileParameter
        /// </summary>
        [Fact]
        public void ModelsConfigFileParameterInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModelsConfigFileParameter
            //Assert.IsType<ModelsConfigFileParameter>(instance);
        }

        /// <summary>
        /// Test the property 'Extension'
        /// </summary>
        [Fact]
        public void ExtensionTest()
        {
            // TODO unit test for the property 'Extension'
        }

        /// <summary>
        /// Test the property 'HttpsHost'
        /// </summary>
        [Fact]
        public void HttpsHostTest()
        {
            // TODO unit test for the property 'HttpsHost'
        }

        /// <summary>
        /// Test the property 'HttpsPassword'
        /// </summary>
        [Fact]
        public void HttpsPasswordTest()
        {
            // TODO unit test for the property 'HttpsPassword'
        }

        /// <summary>
        /// Test the property 'HttpsUsername'
        /// </summary>
        [Fact]
        public void HttpsUsernameTest()
        {
            // TODO unit test for the property 'HttpsUsername'
        }

        /// <summary>
        /// Test the property 'MacAddress'
        /// </summary>
        [Fact]
        public void MacAddressTest()
        {
            // TODO unit test for the property 'MacAddress'
        }

        /// <summary>
        /// Test the property 'Realm'
        /// </summary>
        [Fact]
        public void RealmTest()
        {
            // TODO unit test for the property 'Realm'
        }

        /// <summary>
        /// Test the property 'SipPassword'
        /// </summary>
        [Fact]
        public void SipPasswordTest()
        {
            // TODO unit test for the property 'SipPassword'
        }

        /// <summary>
        /// Test the property 'SipUsername'
        /// </summary>
        [Fact]
        public void SipUsernameTest()
        {
            // TODO unit test for the property 'SipUsername'
        }

        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Fact]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }

        /// <summary>
        /// Test the property 'VoicemailBoxNumber'
        /// </summary>
        [Fact]
        public void VoicemailBoxNumberTest()
        {
            // TODO unit test for the property 'VoicemailBoxNumber'
        }
    }
}

/*
 * White Label Communications CPaas API Documentation
 *
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ModelsCallRecordingParameters
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModelsCallRecordingParametersTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModelsCallRecordingParameters
        //private ModelsCallRecordingParameters instance;

        public ModelsCallRecordingParametersTests()
        {
            // TODO uncomment below to create an instance of ModelsCallRecordingParameters
            //instance = new ModelsCallRecordingParameters();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModelsCallRecordingParameters
        /// </summary>
        [Fact]
        public void ModelsCallRecordingParametersInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModelsCallRecordingParameters
            //Assert.IsType<ModelsCallRecordingParameters>(instance);
        }

        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }

        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Fact]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }

        /// <summary>
        /// Test the property 'RecordMinSec'
        /// </summary>
        [Fact]
        public void RecordMinSecTest()
        {
            // TODO unit test for the property 'RecordMinSec'
        }

        /// <summary>
        /// Test the property 'RecordOnAnswer'
        /// </summary>
        [Fact]
        public void RecordOnAnswerTest()
        {
            // TODO unit test for the property 'RecordOnAnswer'
        }

        /// <summary>
        /// Test the property 'RecordOnBridge'
        /// </summary>
        [Fact]
        public void RecordOnBridgeTest()
        {
            // TODO unit test for the property 'RecordOnBridge'
        }

        /// <summary>
        /// Test the property 'RecordSampleRate'
        /// </summary>
        [Fact]
        public void RecordSampleRateTest()
        {
            // TODO unit test for the property 'RecordSampleRate'
        }

        /// <summary>
        /// Test the property 'TimeLimit'
        /// </summary>
        [Fact]
        public void TimeLimitTest()
        {
            // TODO unit test for the property 'TimeLimit'
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
    }
}
